



<!DOCTYPE html>
<html lang="en" class="">
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta http-equiv="Content-Language" content="en">
    
    
    <title>bootstrap/docs.min.js at master · twbs/bootstrap · GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png">
    <meta property="fb:app_id" content="1401488693436528">

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="twbs/bootstrap" name="twitter:title" /><meta content="bootstrap - The most popular HTML, CSS, and JavaScript framework for developing responsive, mobile first projects on the web." name="twitter:description" /><meta content="https://avatars1.githubusercontent.com/u/2918581?v=2&amp;s=400" name="twitter:image:src" />
<meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://avatars1.githubusercontent.com/u/2918581?v=2&amp;s=400" property="og:image" /><meta content="twbs/bootstrap" property="og:title" /><meta content="https://github.com/twbs/bootstrap" property="og:url" /><meta content="bootstrap - The most popular HTML, CSS, and JavaScript framework for developing responsive, mobile first projects on the web." property="og:description" />

      <meta name="browser-stats-url" content="/_stats">
    <link rel="assets" href="https://assets-cdn.github.com/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035">
    
    <meta name="pjax-timeout" content="1000">

    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="selected-link" value="repo_source" data-pjax-transient>
      <meta name="google-analytics" content="UA-3769691-2">

    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="45AA3F33:76FB:31E55180:54307BB2" name="octolytics-dimension-request_id" />
    <meta content="Rails, view, blob#show" name="analytics-event" />

    
    
    <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">


    <meta content="authenticity_token" name="csrf-param" />
<meta content="fxOCsveFLUhMq63ZD1ssMucHQQdsP03RlpOtdA2dhXhIs8Gn6Hjt8Sl6s6vTc1FY1txVb3OFxFxktQvsZ6UDow==" name="csrf-token" />

    <link href="https://assets-cdn.github.com/assets/github-7ac1eb11eed98adb8eb769d637e00db1cb2c02f9.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://assets-cdn.github.com/assets/github2-9ae9325bdf8dd21253fde438acbd4e158d45b029.css" media="all" rel="stylesheet" type="text/css" />
    


    <meta http-equiv="x-pjax-version" content="1059a99e7bf3380b10f57c485232e692">

      
  <meta name="description" content="bootstrap - The most popular HTML, CSS, and JavaScript framework for developing responsive, mobile first projects on the web.">
  <meta name="go-import" content="github.com/twbs/bootstrap git https://github.com/twbs/bootstrap.git">

  <meta content="2918581" name="octolytics-dimension-user_id" /><meta content="twbs" name="octolytics-dimension-user_login" /><meta content="2126244" name="octolytics-dimension-repository_id" /><meta content="twbs/bootstrap" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="2126244" name="octolytics-dimension-repository_network_root_id" /><meta content="twbs/bootstrap" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/twbs/bootstrap/commits/master.atom" rel="alternate" title="Recent Commits to bootstrap:master" type="application/atom+xml">

  </head>


  <body class="logged_out  env-production macintosh vis-public page-blob">
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>
    <div class="wrapper">
      
      
      
      


      
      <div class="header header-logged-out" role="banner">
  <div class="container clearfix">

    <a class="header-logo-wordmark" href="https://github.com/" ga-data-click="(Logged out) Header, go to homepage, icon:logo-wordmark">
      <span class="mega-octicon octicon-logo-github"></span>
    </a>

    <div class="header-actions" role="navigation">
        <a class="button primary" href="/join" data-ga-click="(Logged out) Header, clicked Sign up, text:sign-up">Sign up</a>
      <a class="button signin" href="/login?return_to=%2Ftwbs%2Fbootstrap%2Fblob%2Fmaster%2Fdocs%2Fassets%2Fjs%2Fdocs.min.js" data-ga-click="(Logged out) Header, clicked Sign in, text:sign-in">Sign in</a>
    </div>

    <div class="site-search repo-scope js-site-search" role="search">
      <form accept-charset="UTF-8" action="/twbs/bootstrap/search" class="js-site-search-form" data-global-search-url="/search" data-repo-search-url="/twbs/bootstrap/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
  <input type="text"
    class="js-site-search-field is-clearable"
    data-hotkey="s"
    name="q"
    placeholder="Search"
    data-global-scope-placeholder="Search GitHub"
    data-repo-scope-placeholder="Search"
    tabindex="1"
    autocapitalize="off">
  <div class="scope-badge">This repository</div>
</form>
    </div>

      <ul class="header-nav left" role="navigation">
          <li class="header-nav-item">
            <a class="header-nav-link" href="/explore" data-ga-click="(Logged out) Header, go to explore, text:explore">Explore</a>
          </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="/features" data-ga-click="(Logged out) Header, go to features, text:features">Features</a>
          </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="https://enterprise.github.com/" data-ga-click="(Logged out) Header, go to enterprise, text:enterprise">Enterprise</a>
          </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="/blog" data-ga-click="(Logged out) Header, go to blog, text:blog">Blog</a>
          </li>
      </ul>

  </div>
</div>



      <div id="start-of-content" class="accessibility-aid"></div>
          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    <div id="js-flash-container">
      
    </div>
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        
<ul class="pagehead-actions">


  <li>
      <a href="/login?return_to=%2Ftwbs%2Fbootstrap"
    class="minibutton with-count star-button tooltipped tooltipped-n"
    aria-label="You must be signed in to star a repository" rel="nofollow">
    <span class="octicon octicon-star"></span>
    Star
  </a>

    <a class="social-count js-social-count" href="/twbs/bootstrap/stargazers">
      72,470
    </a>

  </li>

    <li>
      <a href="/login?return_to=%2Ftwbs%2Fbootstrap"
        class="minibutton with-count js-toggler-target fork-button tooltipped tooltipped-n"
        aria-label="You must be signed in to fork a repository" rel="nofollow">
        <span class="octicon octicon-repo-forked"></span>
        Fork
      </a>
      <a href="/twbs/bootstrap/network" class="social-count">
        27,197
      </a>
    </li>
</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="mega-octicon octicon-repo"></span>
          <span class="author"><a href="/twbs" class="url fn" itemprop="url" rel="author"><span itemprop="title">twbs</span></a></span><!--
       --><span class="path-divider">/</span><!--
       --><strong><a href="/twbs/bootstrap" class="js-current-repository js-repo-home-link">bootstrap</a></strong>

          <span class="page-context-loader">
            <img alt="" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      <div class="repository-with-sidebar repo-container new-discussion-timeline  ">
        <div class="repository-sidebar clearfix">
            
<div class="sunken-menu vertical-right repo-nav js-repo-nav js-repository-container-pjax js-octicon-loaders" role="navigation" data-issue-count-url="/twbs/bootstrap/issues/counts">
  <div class="sunken-menu-contents">
    <ul class="sunken-menu-group">
      <li class="tooltipped tooltipped-w" aria-label="Code">
        <a href="/twbs/bootstrap" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-hotkey="g c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /twbs/bootstrap">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

        <li class="tooltipped tooltipped-w" aria-label="Issues">
          <a href="/twbs/bootstrap/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /twbs/bootstrap/issues">
            <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
            <span class="js-issue-replace-counter"></span>
            <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>

      <li class="tooltipped tooltipped-w" aria-label="Pull Requests">
        <a href="/twbs/bootstrap/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g p" data-selected-links="repo_pulls /twbs/bootstrap/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class="js-pull-replace-counter"></span>
            <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


    </ul>
    <div class="sunken-menu-separator"></div>
    <ul class="sunken-menu-group">

      <li class="tooltipped tooltipped-w" aria-label="Pulse">
        <a href="/twbs/bootstrap/pulse/weekly" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="pulse /twbs/bootstrap/pulse/weekly">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Graphs">
        <a href="/twbs/bootstrap/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_graphs repo_contributors /twbs/bootstrap/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
    </ul>


  </div>
</div>

              <div class="only-with-full-nav">
                
  
<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><span class="text-emphasized">HTTPS</span> clone URL</h3>
  <div class="input-group">
    <input type="text" class="input-mini input-monospace js-url-field"
           value="https://github.com/twbs/bootstrap.git" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/twbs/bootstrap.git" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  
<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><span class="text-emphasized">Subversion</span> checkout URL</h3>
  <div class="input-group">
    <input type="text" class="input-mini input-monospace js-url-field"
           value="https://github.com/twbs/bootstrap" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/twbs/bootstrap" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <a href="https://help.github.com/articles/which-remote-url-should-i-use" class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
    <span class="octicon octicon-question"></span>
  </a>
</p>

  <a href="http://mac.github.com" data-url="github-mac://openRepo/https://github.com/twbs/bootstrap" class="minibutton sidebar-button js-conduit-rewrite-url" title="Save twbs/bootstrap to your computer and use it in GitHub Desktop." aria-label="Save twbs/bootstrap to your computer and use it in GitHub Desktop.">
    <span class="octicon octicon-device-desktop"></span>
    Clone in Desktop
  </a>


                <a href="/twbs/bootstrap/archive/master.zip"
                   class="minibutton sidebar-button"
                   aria-label="Download the contents of twbs/bootstrap as a zip file"
                   title="Download the contents of twbs/bootstrap as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          

<a href="/twbs/bootstrap/blob/7af7a5eadb385246309f1c6460690fc768795cfa/docs/assets/js/docs.min.js" class="hidden js-permalink-shortcut" data-hotkey="y">Permalink</a>

<!-- blob contrib key: blob_contributors:v21:e2409baab12b800c427ff48f772fae81 -->

<div class="file-navigation">
  
<div class="select-menu js-menu-container js-select-menu left">
  <span class="minibutton select-menu-button js-menu-target css-truncate" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    title="master"
    role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button css-truncate-target">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/blob/assume-getBoundingClientRect/docs/assets/js/docs.min.js"
                 data-name="assume-getBoundingClientRect"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="assume-getBoundingClientRect">assume-getBoundingClientRect</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/blob/bump-deps/docs/assets/js/docs.min.js"
                 data-name="bump-deps"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="bump-deps">bump-deps</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/blob/bundle/docs/assets/js/docs.min.js"
                 data-name="bundle"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="bundle">bundle</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/blob/collapsed-class-manual-invocation/docs/assets/js/docs.min.js"
                 data-name="collapsed-class-manual-invocation"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="collapsed-class-manual-invocation">collapsed-class-manual-invocation</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/blob/derp/docs/assets/js/docs.min.js"
                 data-name="derp"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="derp">derp</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/blob/docs-libs/docs/assets/js/docs.min.js"
                 data-name="docs-libs"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="docs-libs">docs-libs</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/blob/fat-13816/docs/assets/js/docs.min.js"
                 data-name="fat-13816"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="fat-13816">fat-13816</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/blob/fix-13897/docs/assets/js/docs.min.js"
                 data-name="fix-13897"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="fix-13897">fix-13897</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/blob/gh-pages/docs/assets/js/docs.min.js"
                 data-name="gh-pages"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="gh-pages">gh-pages</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/blob/grunt-concurrent/docs/assets/js/docs.min.js"
                 data-name="grunt-concurrent"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="grunt-concurrent">grunt-concurrent</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/blob/grunt-no-touch/docs/assets/js/docs.min.js"
                 data-name="grunt-no-touch"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="grunt-no-touch">grunt-no-touch</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/blob/ie8-label-wrap-bug/docs/assets/js/docs.min.js"
                 data-name="ie8-label-wrap-bug"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="ie8-label-wrap-bug">ie8-label-wrap-bug</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/blob/master/docs/assets/js/docs.min.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/blob/media-query-mixins/docs/assets/js/docs.min.js"
                 data-name="media-query-mixins"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="media-query-mixins">media-query-mixins</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/blob/offline-html-validation/docs/assets/js/docs.min.js"
                 data-name="offline-html-validation"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="offline-html-validation">offline-html-validation</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/blob/sauce-screenshots/docs/assets/js/docs.min.js"
                 data-name="sauce-screenshots"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="sauce-screenshots">sauce-screenshots</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/tree/v3.2.0/docs/assets/js/docs.min.js"
                 data-name="v3.2.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.2.0">v3.2.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/tree/v3.1.1/docs/assets/js/docs.min.js"
                 data-name="v3.1.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.1.1">v3.1.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/tree/v3.1.0/docs/assets/js/docs.min.js"
                 data-name="v3.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.1.0">v3.1.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/tree/v3.0.3/docs/assets/js/docs.min.js"
                 data-name="v3.0.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.0.3">v3.0.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/tree/v3.0.2/docs/assets/js/docs.min.js"
                 data-name="v3.0.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.0.2">v3.0.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/tree/v3.0.1/docs/assets/js/docs.min.js"
                 data-name="v3.0.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.0.1">v3.0.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/tree/v3.0.0-rc.2/docs/assets/js/docs.min.js"
                 data-name="v3.0.0-rc.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.0.0-rc.2">v3.0.0-rc.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/tree/v3.0.0-rc1/docs/assets/js/docs.min.js"
                 data-name="v3.0.0-rc1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.0.0-rc1">v3.0.0-rc1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/tree/v3.0.0/docs/assets/js/docs.min.js"
                 data-name="v3.0.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.0.0">v3.0.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/tree/v2.3.2/docs/assets/js/docs.min.js"
                 data-name="v2.3.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.3.2">v2.3.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/tree/v2.3.1/docs/assets/js/docs.min.js"
                 data-name="v2.3.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.3.1">v2.3.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/tree/v2.3.0/docs/assets/js/docs.min.js"
                 data-name="v2.3.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.3.0">v2.3.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/tree/v2.2.2/docs/assets/js/docs.min.js"
                 data-name="v2.2.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.2.2">v2.2.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/tree/v2.2.1/docs/assets/js/docs.min.js"
                 data-name="v2.2.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.2.1">v2.2.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/tree/v2.2.0/docs/assets/js/docs.min.js"
                 data-name="v2.2.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.2.0">v2.2.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/tree/v2.1.1/docs/assets/js/docs.min.js"
                 data-name="v2.1.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.1.1">v2.1.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/tree/v2.1.0/docs/assets/js/docs.min.js"
                 data-name="v2.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.1.0">v2.1.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/tree/v2.0.4/docs/assets/js/docs.min.js"
                 data-name="v2.0.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.0.4">v2.0.4</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/tree/v2.0.3/docs/assets/js/docs.min.js"
                 data-name="v2.0.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.0.3">v2.0.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/tree/v2.0.2/docs/assets/js/docs.min.js"
                 data-name="v2.0.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.0.2">v2.0.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/tree/v2.0.1/docs/assets/js/docs.min.js"
                 data-name="v2.0.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.0.1">v2.0.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/tree/v2.0.0/docs/assets/js/docs.min.js"
                 data-name="v2.0.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.0.0">v2.0.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/tree/v1.4.0/docs/assets/js/docs.min.js"
                 data-name="v1.4.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.4.0">v1.4.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/tree/v1.3.0/docs/assets/js/docs.min.js"
                 data-name="v1.3.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.3.0">v1.3.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/tree/v1.2.0/docs/assets/js/docs.min.js"
                 data-name="v1.2.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.2.0">v1.2.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/tree/v1.1.1/docs/assets/js/docs.min.js"
                 data-name="v1.1.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.1.1">v1.1.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/tree/v1.1.0/docs/assets/js/docs.min.js"
                 data-name="v1.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.1.0">v1.1.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/twbs/bootstrap/tree/v1.0.0/docs/assets/js/docs.min.js"
                 data-name="v1.0.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.0.0">v1.0.0</a>
            </div> <!-- /.select-menu-item -->
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="button-group right">
    <a href="/twbs/bootstrap/find/master"
          class="js-show-file-finder minibutton empty-icon tooltipped tooltipped-s"
          data-pjax
          data-hotkey="t"
          aria-label="Quickly jump between files">
      <span class="octicon octicon-list-unordered"></span>
    </a>
    <button class="js-zeroclipboard minibutton zeroclipboard-button"
          data-clipboard-text="docs/assets/js/docs.min.js"
          aria-label="Copy to clipboard"
          data-copied-hint="Copied!">
      <span class="octicon octicon-clippy"></span>
    </button>
  </div>

  <div class="breadcrumb">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/twbs/bootstrap" class="" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">bootstrap</span></a></span></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/twbs/bootstrap/tree/master/docs" class="" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">docs</span></a></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/twbs/bootstrap/tree/master/docs/assets" class="" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">assets</span></a></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/twbs/bootstrap/tree/master/docs/assets/js" class="" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">js</span></a></span><span class="separator"> / </span><strong class="final-path">docs.min.js</strong>
  </div>
</div>


  <div class="commit file-history-tease">
    <div class="file-history-tease-header">
        <img alt="Chris Rebert" class="avatar" data-user="419884" height="24" src="https://avatars3.githubusercontent.com/u/419884?v=2&amp;s=48" width="24" />
        <span class="author"><a href="/cvrebert" rel="contributor">cvrebert</a></span>
        <time datetime="2014-07-16T00:21:39Z" is="relative-time">Jul 15, 2014</time>
        <div class="commit-title">
            <a href="/twbs/bootstrap/commit/b3d068f2d33e2753421691043ebda63ae7b6f199" class="message" data-pjax="true" title="regenerate docs/assets/js/docs.min.js">regenerate docs/assets/js/docs.min.js</a>
        </div>
    </div>

    <div class="participation">
      <p class="quickstat">
        <a href="#blob_contributors_box" rel="facebox">
          <strong>3</strong>
           contributors
        </a>
      </p>
          <a class="avatar-link tooltipped tooltipped-s" aria-label="XhmikosR" href="/twbs/bootstrap/commits/master/docs/assets/js/docs.min.js?author=XhmikosR"><img alt="XhmikosR" class="avatar" data-user="349621" height="20" src="https://avatars0.githubusercontent.com/u/349621?v=2&amp;s=40" width="20" /></a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="mdo" href="/twbs/bootstrap/commits/master/docs/assets/js/docs.min.js?author=mdo"><img alt="Mark Otto" class="avatar" data-user="98681" height="20" src="https://avatars1.githubusercontent.com/u/98681?v=2&amp;s=40" width="20" /></a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="cvrebert" href="/twbs/bootstrap/commits/master/docs/assets/js/docs.min.js?author=cvrebert"><img alt="Chris Rebert" class="avatar" data-user="419884" height="20" src="https://avatars1.githubusercontent.com/u/419884?v=2&amp;s=40" width="20" /></a>


    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
          <li class="facebox-user-list-item">
            <img alt="XhmikosR" data-user="349621" height="24" src="https://avatars2.githubusercontent.com/u/349621?v=2&amp;s=48" width="24" />
            <a href="/XhmikosR">XhmikosR</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="Mark Otto" data-user="98681" height="24" src="https://avatars3.githubusercontent.com/u/98681?v=2&amp;s=48" width="24" />
            <a href="/mdo">mdo</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="Chris Rebert" data-user="419884" height="24" src="https://avatars3.githubusercontent.com/u/419884?v=2&amp;s=48" width="24" />
            <a href="/cvrebert">cvrebert</a>
          </li>
      </ul>
    </div>
  </div>

<div class="file-box">
  <div class="file">
    <div class="meta clearfix">
      <div class="info file-name">
          <span>24 lines (21 sloc)</span>
          <span class="meta-divider"></span>
        <span>31.744 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
          <a href="/twbs/bootstrap/raw/master/docs/assets/js/docs.min.js" class="minibutton " id="raw-url">Raw</a>
            <a href="/twbs/bootstrap/blame/master/docs/assets/js/docs.min.js" class="minibutton js-update-url-with-hash">Blame</a>
          <a href="/twbs/bootstrap/commits/master/docs/assets/js/docs.min.js" class="minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->

          <a class="octicon-button tooltipped tooltipped-nw js-conduit-openfile-check"
             href="http://mac.github.com"
             data-url="github-mac://openRepo/https://github.com/twbs/bootstrap?branch=master&amp;filepath=docs%2Fassets%2Fjs%2Fdocs.min.js"
             aria-label="Open this file in GitHub for Mac"
             data-failed-title="Your version of GitHub for Mac is too old to open this file. Try checking for updates.">
              <span class="octicon octicon-device-desktop"></span>
          </a>

            <a class="octicon-button disabled tooltipped tooltipped-w" href="#"
               aria-label="You must be signed in to make or propose changes"><span class="octicon octicon-pencil"></span></a>

          <a class="octicon-button danger disabled tooltipped tooltipped-w" href="#"
             aria-label="You must be signed in to make or propose changes">
          <span class="octicon octicon-trashcan"></span>
        </a>
      </div><!-- /.actions -->
    </div>
    
  <div class="blob-wrapper data type-javascript">
      <table class="highlight tab-size-8 js-file-line-container">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code js-file-line"><span class="cm">/*!</span></td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code js-file-line"><span class="cm">Holder - 2.3.2 - client side image placeholders</span></td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code js-file-line"><span class="cm">(c) 2012-2014 Ivan Malopinsky / http://imsky.co</span></td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code js-file-line"><span class="cm">Provided under the MIT License.</span></td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code js-file-line"><span class="cm">Commercial use requires attribution.</span></td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code js-file-line"><span class="cm">*/</span></td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code js-file-line"><span class="kd">var</span> <span class="nx">Holder</span><span class="o">=</span><span class="nx">Holder</span><span class="o">||</span><span class="p">{};</span><span class="o">!</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="mi">10</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">10</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="mi">1</span><span class="o">/</span><span class="mi">12</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(.</span><span class="mi">75</span><span class="o">*</span><span class="nx">e</span><span class="p">,.</span><span class="mi">75</span><span class="o">*</span><span class="nx">d</span><span class="o">*</span><span class="nx">f</span><span class="p">);</span><span class="k">return</span><span class="p">{</span><span class="nx">height</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">size</span><span class="p">,</span><span class="nx">g</span><span class="p">))}}</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">p</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">p</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">p</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="nx">p</span><span class="p">]);</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;;&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">ctx</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dimensions</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">template</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">ratio</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">holder</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="s2">&quot;literal&quot;</span><span class="o">==</span><span class="nx">g</span><span class="p">.</span><span class="nx">textmode</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="s2">&quot;exact&quot;</span><span class="o">==</span><span class="nx">g</span><span class="p">.</span><span class="nx">textmode</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="o">*</span><span class="nx">f</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="o">*</span><span class="nx">f</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">font</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">font</span><span class="o">:</span><span class="s2">&quot;Arial,Helvetica,sans-serif&quot;</span><span class="p">;</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">l</span><span class="p">,</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">m</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">textAlign</span><span class="o">=</span><span class="s2">&quot;center&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">textBaseline</span><span class="o">=</span><span class="s2">&quot;middle&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">background</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">fillRect</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">fillStyle</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">foreground</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">font</span><span class="o">=</span><span class="s2">&quot;bold &quot;</span><span class="o">+</span><span class="nx">k</span><span class="o">+</span><span class="s2">&quot;px &quot;</span><span class="o">+</span><span class="nx">n</span><span class="p">;</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">text</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">text</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;x&quot;</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">dimensions</span><span class="p">;</span><span class="nx">o</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="o">+</span><span class="s2">&quot;x&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">exact_dimensions</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">exact_dimensions</span><span class="p">;</span><span class="nx">o</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;x&quot;</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">measureText</span><span class="p">(</span><span class="nx">o</span><span class="p">).</span><span class="nx">width</span><span class="p">;</span><span class="k">return</span> <span class="nx">p</span><span class="o">/</span><span class="nx">l</span><span class="o">&gt;=</span><span class="p">.</span><span class="mi">75</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(.</span><span class="mi">75</span><span class="o">*</span><span class="nx">k</span><span class="o">*</span><span class="p">(</span><span class="nx">l</span><span class="o">/</span><span class="nx">p</span><span class="p">))),</span><span class="nx">b</span><span class="p">.</span><span class="nx">font</span><span class="o">=</span><span class="s2">&quot;bold &quot;</span><span class="o">+</span><span class="nx">k</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="s2">&quot;px &quot;</span><span class="o">+</span><span class="nx">n</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">fillText</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="nx">l</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">m</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">l</span><span class="p">),</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">toDataURL</span><span class="p">(</span><span class="s2">&quot;image/png&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dimensions</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">template</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">holder</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="s2">&quot;literal&quot;</span><span class="o">==</span><span class="nx">e</span><span class="p">.</span><span class="nx">textmode</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="s2">&quot;exact&quot;</span><span class="o">==</span><span class="nx">e</span><span class="p">.</span><span class="nx">textmode</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">font</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">font</span><span class="o">:</span><span class="s2">&quot;Arial,Helvetica,sans-serif&quot;</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">text</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">text</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;x&quot;</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">dimensions</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="o">+</span><span class="s2">&quot;x&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">exact_dimensions</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">exact_dimensions</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;x&quot;</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">z</span><span class="p">({</span><span class="nx">text</span><span class="o">:</span><span class="nx">m</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="nx">j</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">text_height</span><span class="o">:</span><span class="nx">i</span><span class="p">,</span><span class="nx">font</span><span class="o">:</span><span class="nx">l</span><span class="p">,</span><span class="nx">template</span><span class="o">:</span><span class="nx">d</span><span class="p">});</span><span class="k">return</span><span class="s2">&quot;data:image/svg+xml;base64,&quot;</span><span class="o">+</span><span class="nx">btoa</span><span class="p">(</span><span class="nx">unescape</span><span class="p">(</span><span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nx">n</span><span class="p">)))}</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">r</span><span class="p">.</span><span class="nx">use_canvas</span><span class="o">&amp;&amp;!</span><span class="nx">r</span><span class="p">.</span><span class="nx">use_svg</span><span class="o">?</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">dimensions</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">theme</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">text</span><span class="o">?</span><span class="nb">decodeURIComponent</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">text</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">text</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">width</span><span class="o">+</span><span class="s2">&quot;x&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">height</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">h</span><span class="o">?</span><span class="nx">o</span><span class="p">(</span><span class="nx">f</span><span class="p">,{</span><span class="nx">text</span><span class="o">:</span><span class="nx">h</span><span class="p">})</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">font</span><span class="o">?</span><span class="nx">o</span><span class="p">(</span><span class="nx">f</span><span class="p">,{</span><span class="nx">font</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">font</span><span class="p">})</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;data-src&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">theme</span><span class="o">=</span><span class="nx">f</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">holder_data</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;image&quot;</span><span class="o">==</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;alt&quot;</span><span class="p">,</span><span class="nx">h</span><span class="o">?</span><span class="nx">h</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">text</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">text</span><span class="o">+</span><span class="s2">&quot; [&quot;</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="o">:</span><span class="nx">i</span><span class="p">),(</span><span class="nx">r</span><span class="p">.</span><span class="nx">use_fallback</span><span class="o">||!</span><span class="nx">c</span><span class="p">.</span><span class="nx">auto</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">width</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">height</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">),</span><span class="nx">r</span><span class="p">.</span><span class="nx">use_fallback</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">backgroundColor</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">background</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;src&quot;</span><span class="p">,</span><span class="nx">g</span><span class="p">({</span><span class="nx">ctx</span><span class="o">:</span><span class="nx">w</span><span class="p">,</span><span class="nx">dimensions</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">template</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">ratio</span><span class="o">:</span><span class="nx">x</span><span class="p">,</span><span class="nx">holder</span><span class="o">:</span><span class="nx">c</span><span class="p">})),</span><span class="nx">c</span><span class="p">.</span><span class="nx">textmode</span><span class="o">&amp;&amp;</span><span class="s2">&quot;exact&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">textmode</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">k</span><span class="p">(</span><span class="nx">b</span><span class="p">))))</span><span class="o">:</span><span class="s2">&quot;background&quot;</span><span class="o">==</span><span class="nx">a</span><span class="o">?</span><span class="nx">r</span><span class="p">.</span><span class="nx">use_fallback</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">backgroundImage</span><span class="o">=</span><span class="s2">&quot;url(&quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">({</span><span class="nx">ctx</span><span class="o">:</span><span class="nx">w</span><span class="p">,</span><span class="nx">dimensions</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">template</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">ratio</span><span class="o">:</span><span class="nx">x</span><span class="p">,</span><span class="nx">holder</span><span class="o">:</span><span class="nx">c</span><span class="p">})</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">backgroundSize</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">width</span><span class="o">+</span><span class="s2">&quot;px &quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">height</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;fluid&quot;</span><span class="o">==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;alt&quot;</span><span class="p">,</span><span class="nx">h</span><span class="o">?</span><span class="nx">h</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">text</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">text</span><span class="o">+</span><span class="s2">&quot; [&quot;</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="o">:</span><span class="nx">i</span><span class="p">),</span><span class="s2">&quot;%&quot;</span><span class="o">==</span><span class="nx">e</span><span class="p">.</span><span class="nx">height</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">height</span><span class="o">:</span><span class="kc">null</span><span class="o">!=</span><span class="nx">c</span><span class="p">.</span><span class="nx">auto</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">auto</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">height</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">),</span><span class="s2">&quot;%&quot;</span><span class="o">==</span><span class="nx">e</span><span class="p">.</span><span class="nx">width</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">width</span><span class="o">:</span><span class="kc">null</span><span class="o">!=</span><span class="nx">c</span><span class="p">.</span><span class="nx">auto</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">auto</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">width</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">),(</span><span class="s2">&quot;inline&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">||</span><span class="s2">&quot;none&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;block&quot;</span><span class="p">),</span><span class="nx">j</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">r</span><span class="p">.</span><span class="nx">use_fallback</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">backgroundColor</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">background</span><span class="o">:</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">k</span><span class="p">(</span><span class="nx">b</span><span class="p">)))}</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{</span><span class="nx">height</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">clientHeight</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">clientWidth</span><span class="p">};</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">height</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">width</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeAttribute</span><span class="p">(</span><span class="s2">&quot;data-holder-invisible&quot;</span><span class="p">),</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;data-holder-invisible&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="k">void</span> <span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">j</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">holder_data</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">i</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">invisible_error_fn</span><span class="p">(</span><span class="nx">j</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">holder_data</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">initial_dimensions</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">fluid_data</span><span class="o">=</span><span class="p">{</span><span class="nx">fluid_height</span><span class="o">:</span><span class="s2">&quot;%&quot;</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">dimensions</span><span class="p">.</span><span class="nx">height</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">fluid_width</span><span class="o">:</span><span class="s2">&quot;%&quot;</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">dimensions</span><span class="p">.</span><span class="nx">width</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">mode</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">d</span><span class="p">.</span><span class="nx">fluid_data</span><span class="p">.</span><span class="nx">fluid_width</span><span class="o">&amp;&amp;!</span><span class="nx">d</span><span class="p">.</span><span class="nx">fluid_data</span><span class="p">.</span><span class="nx">fluid_height</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">fluid_data</span><span class="p">.</span><span class="nx">mode</span><span class="o">=</span><span class="s2">&quot;width&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">fluid_data</span><span class="p">.</span><span class="nx">ratio</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">initial_dimensions</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">dimensions</span><span class="p">.</span><span class="nx">height</span><span class="p">))</span><span class="o">:!</span><span class="nx">d</span><span class="p">.</span><span class="nx">fluid_data</span><span class="p">.</span><span class="nx">fluid_width</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">fluid_data</span><span class="p">.</span><span class="nx">fluid_height</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">fluid_data</span><span class="p">.</span><span class="nx">mode</span><span class="o">=</span><span class="s2">&quot;height&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">fluid_data</span><span class="p">.</span><span class="nx">ratio</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">dimensions</span><span class="p">.</span><span class="nx">width</span><span class="p">)</span><span class="o">/</span><span class="nx">d</span><span class="p">.</span><span class="nx">initial_dimensions</span><span class="p">.</span><span class="nx">height</span><span class="p">)}}}</span><span class="kd">function</span> <span class="nx">k</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="kc">null</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">?</span><span class="nx">v</span><span class="o">:</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span> <span class="k">in</span> <span class="nx">c</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">d</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">holder_data</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">holder_data</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">i</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">invisible_error_fn</span><span class="p">(</span><span class="nx">k</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">fluid</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">auto</span><span class="p">)</span><span class="k">switch</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">fluid_data</span><span class="p">.</span><span class="nx">mode</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;width&quot;</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="nx">f</span><span class="p">.</span><span class="nx">fluid_data</span><span class="p">.</span><span class="nx">ratio</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;height&quot;</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">height</span><span class="o">*</span><span class="nx">f</span><span class="p">.</span><span class="nx">fluid_data</span><span class="p">.</span><span class="nx">ratio</span><span class="p">}</span><span class="nx">e</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;src&quot;</span><span class="p">,</span><span class="nx">g</span><span class="p">({</span><span class="nx">ctx</span><span class="o">:</span><span class="nx">w</span><span class="p">,</span><span class="nx">dimensions</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">template</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">theme</span><span class="p">,</span><span class="nx">ratio</span><span class="o">:</span><span class="nx">x</span><span class="p">,</span><span class="nx">holder</span><span class="o">:</span><span class="nx">f</span><span class="p">}))}</span><span class="nx">f</span><span class="p">.</span><span class="nx">textmode</span><span class="o">&amp;&amp;</span><span class="s2">&quot;exact&quot;</span><span class="o">==</span><span class="nx">f</span><span class="p">.</span><span class="nx">textmode</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">exact_dimensions</span><span class="o">=</span><span class="nx">h</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;src&quot;</span><span class="p">,</span><span class="nx">g</span><span class="p">({</span><span class="nx">ctx</span><span class="o">:</span><span class="nx">w</span><span class="p">,</span><span class="nx">dimensions</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">dimensions</span><span class="p">,</span><span class="nx">template</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">theme</span><span class="p">,</span><span class="nx">ratio</span><span class="o">:</span><span class="nx">x</span><span class="p">,</span><span class="nx">holder</span><span class="o">:</span><span class="nx">f</span><span class="p">})))}}}}</span><span class="kd">function</span> <span class="nx">l</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">{</span><span class="nx">theme</span><span class="o">:</span><span class="nx">o</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">themes</span><span class="p">.</span><span class="nx">gray</span><span class="p">,{})},</span><span class="nx">e</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&gt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">g</span><span class="p">];</span><span class="nx">a</span><span class="p">.</span><span class="nx">flags</span><span class="p">.</span><span class="nx">dimensions</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">dimensions</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">flags</span><span class="p">.</span><span class="nx">dimensions</span><span class="p">.</span><span class="nx">output</span><span class="p">(</span><span class="nx">h</span><span class="p">))</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">flags</span><span class="p">.</span><span class="nx">fluid</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">dimensions</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">flags</span><span class="p">.</span><span class="nx">fluid</span><span class="p">.</span><span class="nx">output</span><span class="p">(</span><span class="nx">h</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">fluid</span><span class="o">=!</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">flags</span><span class="p">.</span><span class="nx">textmode</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">textmode</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">flags</span><span class="p">.</span><span class="nx">textmode</span><span class="p">.</span><span class="nx">output</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">flags</span><span class="p">.</span><span class="nx">colors</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">theme</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">flags</span><span class="p">.</span><span class="nx">colors</span><span class="p">.</span><span class="nx">output</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">themes</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">themes</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">theme</span><span class="o">=</span><span class="nx">o</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">themes</span><span class="p">[</span><span class="nx">h</span><span class="p">],{}))</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">flags</span><span class="p">.</span><span class="nx">font</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">font</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">flags</span><span class="p">.</span><span class="nx">font</span><span class="p">.</span><span class="nx">output</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">flags</span><span class="p">.</span><span class="nx">auto</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">auto</span><span class="o">=!</span><span class="mi">0</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">flags</span><span class="p">.</span><span class="nx">text</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">text</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">flags</span><span class="p">.</span><span class="nx">text</span><span class="p">.</span><span class="nx">output</span><span class="p">(</span><span class="nx">h</span><span class="p">))}</span><span class="k">return</span> <span class="nx">e</span><span class="o">?</span><span class="nx">d</span><span class="o">:!</span><span class="mi">1</span><span class="p">}</span><span class="kd">function</span> <span class="nx">m</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="s2">&quot;complete&quot;</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;readystatechange&quot;</span><span class="p">,</span><span class="nx">e</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nb">document</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">?</span><span class="s2">&quot;addEventListener&quot;</span><span class="o">:</span><span class="s2">&quot;attachEvent&quot;</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">?</span><span class="s2">&quot;removeEventListener&quot;</span><span class="o">:</span><span class="s2">&quot;detachEvent&quot;</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="s2">&quot;on&quot;</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){(</span><span class="nx">g</span><span class="p">.</span><span class="nx">type</span><span class="o">!=</span><span class="nx">d</span><span class="o">||</span><span class="nx">h</span><span class="p">.</span><span class="nx">readyState</span><span class="o">==</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">((</span><span class="s2">&quot;load&quot;</span><span class="o">==</span><span class="nx">g</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">h</span><span class="p">)[</span><span class="nx">k</span><span class="p">](</span><span class="nx">l</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="o">!</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=!</span><span class="mi">0</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kc">null</span><span class="p">))},</span><span class="nx">n</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">try</span><span class="p">{</span><span class="nx">i</span><span class="p">.</span><span class="nx">doScroll</span><span class="p">(</span><span class="s2">&quot;left&quot;</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">void</span> <span class="nx">setTimeout</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="mi">50</span><span class="p">)}</span><span class="nx">m</span><span class="p">(</span><span class="s2">&quot;poll&quot;</span><span class="p">)};</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">readyState</span><span class="o">==</span><span class="nx">c</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;lazy&quot;</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">createEventObject</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">doScroll</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">g</span><span class="o">=!</span><span class="nx">a</span><span class="p">.</span><span class="nx">frameElement</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">o</span><span class="p">){}</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">()}</span><span class="nx">h</span><span class="p">[</span><span class="nx">j</span><span class="p">](</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot;DOMContentLoaded&quot;</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">h</span><span class="p">[</span><span class="nx">j</span><span class="p">](</span><span class="nx">l</span><span class="o">+</span><span class="nx">d</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">a</span><span class="p">[</span><span class="nx">j</span><span class="p">](</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot;load&quot;</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">e</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/^(\W)?(.*)/</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="nb">document</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="s2">&quot;getElement&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">?</span><span class="s2">&quot;#&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">?</span><span class="s2">&quot;ById&quot;</span><span class="o">:</span><span class="s2">&quot;sByClassName&quot;</span><span class="o">:</span><span class="s2">&quot;sByTagName&quot;</span><span class="p">)],</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]),</span><span class="nx">e</span><span class="o">=</span><span class="p">[];</span><span class="k">return</span> <span class="kc">null</span><span class="o">!==</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="mi">0</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">d</span><span class="o">:</span><span class="p">[</span><span class="nx">d</span><span class="p">]),</span><span class="nx">e</span><span class="p">}</span><span class="kd">function</span> <span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]);</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="p">{</span><span class="nx">use_svg</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">use_canvas</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">use_fallback</span><span class="o">:!</span><span class="mi">1</span><span class="p">},</span><span class="nx">r</span><span class="o">=</span><span class="p">{},</span><span class="nx">s</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">canvas</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;canvas&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">getContext</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">toDataURL</span><span class="p">(</span><span class="s2">&quot;image/png&quot;</span><span class="p">).</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;data:image/png&quot;</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">)</span><span class="nx">q</span><span class="p">.</span><span class="nx">use_fallback</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">else</span> <span class="kd">var</span> <span class="nx">w</span><span class="o">=</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">getContext</span><span class="p">(</span><span class="s2">&quot;2d&quot;</span><span class="p">);</span><span class="k">else</span> <span class="nx">q</span><span class="p">.</span><span class="nx">use_fallback</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElementNS</span><span class="o">&amp;&amp;</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElementNS</span><span class="p">(</span><span class="s2">&quot;http://www.w3.org/2000/svg&quot;</span><span class="p">,</span><span class="s2">&quot;svg&quot;</span><span class="p">).</span><span class="nx">createSVGRect</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">q</span><span class="p">.</span><span class="nx">use_svg</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">q</span><span class="p">.</span><span class="nx">use_canvas</span><span class="o">=!</span><span class="mi">1</span><span class="p">),</span><span class="nx">q</span><span class="p">.</span><span class="nx">use_fallback</span><span class="o">||</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="nb">window</span><span class="p">.</span><span class="nx">devicePixelRatio</span><span class="o">||</span><span class="mi">1</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nx">w</span><span class="p">.</span><span class="nx">webkitBackingStorePixelRatio</span><span class="o">||</span><span class="nx">w</span><span class="p">.</span><span class="nx">mozBackingStorePixelRatio</span><span class="o">||</span><span class="nx">w</span><span class="p">.</span><span class="nx">msBackingStorePixelRatio</span><span class="o">||</span><span class="nx">w</span><span class="p">.</span><span class="nx">oBackingStorePixelRatio</span><span class="o">||</span><span class="nx">w</span><span class="p">.</span><span class="nx">backingStorePixelRatio</span><span class="o">||</span><span class="mi">1</span><span class="p">);</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nx">t</span><span class="o">/</span><span class="nx">u</span><span class="p">,</span><span class="nx">y</span><span class="o">=</span><span class="p">{</span><span class="nx">domain</span><span class="o">:</span><span class="s2">&quot;holder.js&quot;</span><span class="p">,</span><span class="nx">images</span><span class="o">:</span><span class="s2">&quot;img&quot;</span><span class="p">,</span><span class="nx">bgnodes</span><span class="o">:</span><span class="s2">&quot;.holderjs&quot;</span><span class="p">,</span><span class="nx">themes</span><span class="o">:</span><span class="p">{</span><span class="nx">gray</span><span class="o">:</span><span class="p">{</span><span class="nx">background</span><span class="o">:</span><span class="s2">&quot;#eee&quot;</span><span class="p">,</span><span class="nx">foreground</span><span class="o">:</span><span class="s2">&quot;#aaa&quot;</span><span class="p">,</span><span class="nx">size</span><span class="o">:</span><span class="mi">12</span><span class="p">},</span><span class="nx">social</span><span class="o">:</span><span class="p">{</span><span class="nx">background</span><span class="o">:</span><span class="s2">&quot;#3a5a97&quot;</span><span class="p">,</span><span class="nx">foreground</span><span class="o">:</span><span class="s2">&quot;#fff&quot;</span><span class="p">,</span><span class="nx">size</span><span class="o">:</span><span class="mi">12</span><span class="p">},</span><span class="nx">industrial</span><span class="o">:</span><span class="p">{</span><span class="nx">background</span><span class="o">:</span><span class="s2">&quot;#434A52&quot;</span><span class="p">,</span><span class="nx">foreground</span><span class="o">:</span><span class="s2">&quot;#C2F200&quot;</span><span class="p">,</span><span class="nx">size</span><span class="o">:</span><span class="mi">12</span><span class="p">},</span><span class="nx">sky</span><span class="o">:</span><span class="p">{</span><span class="nx">background</span><span class="o">:</span><span class="s2">&quot;#0D8FDB&quot;</span><span class="p">,</span><span class="nx">foreground</span><span class="o">:</span><span class="s2">&quot;#fff&quot;</span><span class="p">,</span><span class="nx">size</span><span class="o">:</span><span class="mi">12</span><span class="p">},</span><span class="nx">vine</span><span class="o">:</span><span class="p">{</span><span class="nx">background</span><span class="o">:</span><span class="s2">&quot;#39DBAC&quot;</span><span class="p">,</span><span class="nx">foreground</span><span class="o">:</span><span class="s2">&quot;#1E292C&quot;</span><span class="p">,</span><span class="nx">size</span><span class="o">:</span><span class="mi">12</span><span class="p">},</span><span class="nx">lava</span><span class="o">:</span><span class="p">{</span><span class="nx">background</span><span class="o">:</span><span class="s2">&quot;#F8591A&quot;</span><span class="p">,</span><span class="nx">foreground</span><span class="o">:</span><span class="s2">&quot;#1C2846&quot;</span><span class="p">,</span><span class="nx">size</span><span class="o">:</span><span class="mi">12</span><span class="p">}},</span><span class="nx">stylesheet</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">flags</span><span class="o">=</span><span class="p">{</span><span class="nx">dimensions</span><span class="o">:</span><span class="p">{</span><span class="nx">regex</span><span class="o">:</span><span class="sr">/^(\d+)x(\d+)$/</span><span class="p">,</span><span class="nx">output</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">regex</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span><span class="p">{</span><span class="nx">width</span><span class="o">:+</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">height</span><span class="o">:+</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">]}}},</span><span class="nx">fluid</span><span class="o">:</span><span class="p">{</span><span class="nx">regex</span><span class="o">:</span><span class="sr">/^([0-9%]+)x([0-9%]+)$/</span><span class="p">,</span><span class="nx">output</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">regex</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span><span class="p">{</span><span class="nx">width</span><span class="o">:</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">height</span><span class="o">:</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">]}}},</span><span class="nx">colors</span><span class="o">:</span><span class="p">{</span><span class="nx">regex</span><span class="o">:</span><span class="sr">/#([0-9a-f]{3,})\:#([0-9a-f]{3,})/i</span><span class="p">,</span><span class="nx">output</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">regex</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span><span class="p">{</span><span class="nx">size</span><span class="o">:</span><span class="nx">y</span><span class="p">.</span><span class="nx">themes</span><span class="p">.</span><span class="nx">gray</span><span class="p">.</span><span class="nx">size</span><span class="p">,</span><span class="nx">foreground</span><span class="o">:</span><span class="s2">&quot;#&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">background</span><span class="o">:</span><span class="s2">&quot;#&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]}}},</span><span class="nx">text</span><span class="o">:</span><span class="p">{</span><span class="nx">regex</span><span class="o">:</span><span class="sr">/text\:(.*)/</span><span class="p">,</span><span class="nx">output</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">regex</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">a</span><span class="p">)[</span><span class="mi">1</span><span class="p">]}},</span><span class="nx">font</span><span class="o">:</span><span class="p">{</span><span class="nx">regex</span><span class="o">:</span><span class="sr">/font\:(.*)/</span><span class="p">,</span><span class="nx">output</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">regex</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">a</span><span class="p">)[</span><span class="mi">1</span><span class="p">]}},</span><span class="nx">auto</span><span class="o">:</span><span class="p">{</span><span class="nx">regex</span><span class="o">:</span><span class="sr">/^auto$/</span><span class="p">},</span><span class="nx">textmode</span><span class="o">:</span><span class="p">{</span><span class="nx">regex</span><span class="o">:</span><span class="sr">/textmode\:(.*)/</span><span class="p">,</span><span class="nx">output</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">regex</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">a</span><span class="p">)[</span><span class="mi">1</span><span class="p">]}}};</span><span class="kd">var</span> <span class="nx">z</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">XMLSerializer</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">XMLSerializer</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;http://www.w3.org/2000/svg&quot;</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElementNS</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;svg&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">webkitMatchesSelector</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;xmlns&quot;</span><span class="p">,</span><span class="s2">&quot;http://www.w3.org/2000/svg&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElementNS</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;rect&quot;</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElementNS</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;text&quot;</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="kc">null</span><span class="p">);</span><span class="k">return</span> <span class="nx">f</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;text-anchor&quot;</span><span class="p">,</span><span class="s2">&quot;middle&quot;</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;width&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;height&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;width&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;height&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;fill&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">template</span><span class="p">.</span><span class="nx">background</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;x&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;y&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">nodeValue</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">text</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;style&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">({</span><span class="nx">fill</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">template</span><span class="p">.</span><span class="nx">foreground</span><span class="p">,</span><span class="s2">&quot;font-weight&quot;</span><span class="o">:</span><span class="s2">&quot;bold&quot;</span><span class="p">,</span><span class="s2">&quot;font-size&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">text_height</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="s2">&quot;font-family&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">font</span><span class="p">,</span><span class="s2">&quot;dominant-baseline&quot;</span><span class="o">:</span><span class="s2">&quot;central&quot;</span><span class="p">})),</span><span class="nx">a</span><span class="p">.</span><span class="nx">serializeToString</span><span class="p">(</span><span class="nx">c</span><span class="p">)}}}();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">A</span> <span class="k">in</span> <span class="nx">a</span><span class="p">.</span><span class="nx">flags</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">flags</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">A</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">flags</span><span class="p">[</span><span class="nx">A</span><span class="p">].</span><span class="nx">match</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">regex</span><span class="p">)});</span><span class="nx">a</span><span class="p">.</span><span class="nx">invisible_error_fn</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasAttribute</span><span class="p">(</span><span class="s2">&quot;data-holder-invisible&quot;</span><span class="p">))</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Holder: invisible placeholder&quot;</span><span class="p">)}},</span><span class="nx">a</span><span class="p">.</span><span class="nx">add_theme</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">themes</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">),</span><span class="nx">a</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">add_image</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;img&quot;</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;data-src&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">g</span><span class="p">)}</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">run</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">r</span><span class="o">=</span><span class="nx">o</span><span class="p">({},</span><span class="nx">q</span><span class="p">),</span><span class="nx">s</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">o</span><span class="p">(</span><span class="nx">y</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">f</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">c</span><span class="p">.</span><span class="nx">use_canvas</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">use_canvas</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">use_canvas</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">r</span><span class="p">.</span><span class="nx">use_svg</span><span class="o">=!</span><span class="mi">1</span><span class="p">),</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">c</span><span class="p">.</span><span class="nx">images</span><span class="o">?</span><span class="nx">e</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">images</span><span class="p">)</span><span class="o">:</span><span class="nb">window</span><span class="p">.</span><span class="nx">NodeList</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">images</span> <span class="k">instanceof</span> <span class="nb">window</span><span class="p">.</span><span class="nx">NodeList</span><span class="o">?</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">images</span><span class="o">:</span><span class="nb">window</span><span class="p">.</span><span class="nx">Node</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">images</span> <span class="k">instanceof</span> <span class="nb">window</span><span class="p">.</span><span class="nx">Node</span><span class="o">?</span><span class="nx">e</span><span class="o">=</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">images</span><span class="p">]</span><span class="o">:</span><span class="nb">window</span><span class="p">.</span><span class="nx">HTMLCollection</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">images</span> <span class="k">instanceof</span> <span class="nb">window</span><span class="p">.</span><span class="nx">HTMLCollection</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">images</span><span class="p">),</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">c</span><span class="p">.</span><span class="nx">bgnodes</span><span class="o">?</span><span class="nx">f</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">bgnodes</span><span class="p">)</span><span class="o">:</span><span class="nb">window</span><span class="p">.</span><span class="nx">NodeList</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">elements</span> <span class="k">instanceof</span> <span class="nb">window</span><span class="p">.</span><span class="nx">NodeList</span><span class="o">?</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">bgnodes</span><span class="o">:</span><span class="nb">window</span><span class="p">.</span><span class="nx">Node</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">bgnodes</span> <span class="k">instanceof</span> <span class="nb">window</span><span class="p">.</span><span class="nx">Node</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">bgnodes</span><span class="p">]),</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">j</span><span class="o">&gt;</span><span class="nx">k</span><span class="p">;</span><span class="nx">k</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">k</span><span class="p">]);</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;holderjs-style&quot;</span><span class="p">);</span><span class="nx">g</span><span class="o">||</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;style&quot;</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">,</span><span class="s2">&quot;holderjs-style&quot;</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/css&quot;</span><span class="p">,</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;head&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">g</span><span class="p">)),</span><span class="nx">c</span><span class="p">.</span><span class="nx">nocss</span><span class="o">||</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">styleSheet</span><span class="o">?</span><span class="nx">g</span><span class="p">.</span><span class="nx">styleSheet</span><span class="p">.</span><span class="nx">cssText</span><span class="o">+=</span><span class="nx">c</span><span class="p">.</span><span class="nx">stylesheet</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">stylesheet</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">stylesheet</span><span class="p">)));</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">domain</span><span class="o">+</span><span class="s1">&#39;/(.*?)&quot;?\\)&#39;</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">j</span><span class="o">&gt;</span><span class="nx">k</span><span class="p">;</span><span class="nx">k</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nb">window</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">k</span><span class="p">],</span><span class="kc">null</span><span class="p">).</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="s2">&quot;background-image&quot;</span><span class="p">),</span><span class="nx">p</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span><span class="nx">t</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">k</span><span class="p">].</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;data-background-src&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">){</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="nx">l</span><span class="p">(</span><span class="nx">p</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="p">),</span><span class="nx">c</span><span class="p">);</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="s2">&quot;background&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">[</span><span class="nx">k</span><span class="p">],</span><span class="nx">u</span><span class="p">,</span><span class="nx">m</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="nx">l</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">domain</span><span class="p">)</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">domain</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="mi">1</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="p">),</span><span class="nx">c</span><span class="p">);</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="s2">&quot;background&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">[</span><span class="nx">k</span><span class="p">],</span><span class="nx">u</span><span class="p">,</span><span class="nx">m</span><span class="p">)}}</span><span class="k">for</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">j</span><span class="o">&gt;</span><span class="nx">k</span><span class="p">;</span><span class="nx">k</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">v</span><span class="p">,</span><span class="nx">w</span><span class="p">;</span><span class="nx">w</span><span class="o">=</span><span class="nx">v</span><span class="o">=</span><span class="nx">m</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">w</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">k</span><span class="p">].</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;src&quot;</span><span class="p">),</span><span class="nx">attr_datasrc</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">k</span><span class="p">].</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;data-src&quot;</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">x</span><span class="p">){}</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">attr_datasrc</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">domain</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">?</span><span class="nx">m</span><span class="o">=</span><span class="nx">w</span><span class="o">:</span><span class="nx">attr_datasrc</span><span class="o">&amp;&amp;</span><span class="nx">attr_datasrc</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">domain</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="nx">attr_datasrc</span><span class="p">),</span><span class="nx">m</span><span class="p">){</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="nx">l</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">domain</span><span class="p">)</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">domain</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="mi">1</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="p">),</span><span class="nx">c</span><span class="p">);</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">fluid</span><span class="o">?</span><span class="nx">h</span><span class="p">(</span><span class="s2">&quot;fluid&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">k</span><span class="p">],</span><span class="nx">u</span><span class="p">,</span><span class="nx">m</span><span class="p">)</span><span class="o">:</span><span class="nx">h</span><span class="p">(</span><span class="s2">&quot;image&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">k</span><span class="p">],</span><span class="nx">u</span><span class="p">,</span><span class="nx">m</span><span class="p">))}}</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">m</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nb">window</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">?</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;resize&quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nb">window</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;orientationchange&quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">))</span><span class="o">:</span><span class="nb">window</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;onresize&quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">),</span><span class="nx">s</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">run</span><span class="p">({}),</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nb">window</span><span class="p">.</span><span class="nx">Turbolinks</span><span class="o">&amp;&amp;</span><span class="nb">document</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;page:change&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">run</span><span class="p">({})})}),</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">define</span><span class="o">&amp;&amp;</span><span class="nx">define</span><span class="p">.</span><span class="nx">amd</span><span class="o">&amp;&amp;</span><span class="nx">define</span><span class="p">([],</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">a</span><span class="p">}),</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">=</span><span class="nx">a</span><span class="p">}</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">exports</span><span class="o">?</span><span class="nx">exports</span><span class="o">:</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="nb">Error</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;InvalidCharacterError&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">btoa</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">btoa</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="o">|</span><span class="nx">f</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">f</span><span class="o">%</span><span class="mi">1</span><span class="p">);</span><span class="nx">h</span><span class="o">+=</span><span class="nx">g</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">63</span><span class="o">&amp;</span><span class="nx">d</span><span class="o">&gt;&gt;</span><span class="mi">8</span><span class="o">-</span><span class="mi">8</span><span class="o">*</span><span class="p">(</span><span class="nx">f</span><span class="o">%</span><span class="mi">1</span><span class="p">))){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">charCodeAt</span><span class="p">(</span><span class="nx">f</span><span class="o">+=</span><span class="p">.</span><span class="mi">75</span><span class="p">),</span><span class="nx">e</span><span class="o">&gt;</span><span class="mi">255</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">a</span><span class="p">(</span><span class="s2">&quot;&#39;btoa&#39; failed&quot;</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="o">&lt;&lt;</span><span class="mi">8</span><span class="o">|</span><span class="nx">e</span><span class="p">}</span><span class="k">return</span> <span class="nx">h</span><span class="p">}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">atob</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">atob</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/=+$/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="mi">1</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">%</span><span class="mi">4</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">a</span><span class="p">(</span><span class="s2">&quot;&#39;atob&#39; failed&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">g</span><span class="o">++</span><span class="p">);</span><span class="o">~</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">f</span><span class="o">%</span><span class="mi">4</span><span class="o">?</span><span class="mi">64</span><span class="o">*</span><span class="nx">d</span><span class="o">+</span><span class="nx">e</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">++%</span><span class="mi">4</span><span class="p">)</span><span class="o">?</span><span class="nx">h</span><span class="o">+=</span><span class="nb">String</span><span class="p">.</span><span class="nx">fromCharCode</span><span class="p">(</span><span class="mi">255</span><span class="o">&amp;</span><span class="nx">d</span><span class="o">&gt;&gt;</span><span class="p">(</span><span class="mi">6</span><span class="o">&amp;-</span><span class="mi">2</span><span class="o">*</span><span class="nx">f</span><span class="p">))</span><span class="o">:</span><span class="mi">0</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">return</span> <span class="nx">h</span><span class="p">})}(),</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByClassName</span><span class="o">||</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByClassName</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nb">document</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">)</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">evaluate</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;.//*[contains(concat(&#39; &#39;, @class, &#39; &#39;), &#39; &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; &#39;)]&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">evaluate</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="kc">null</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">iterateNext</span><span class="p">();)</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;*&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;(^|\\s)&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;(\\s|$)&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">className</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]);</span><span class="k">return</span> <span class="nx">f</span><span class="p">}),</span><span class="nb">window</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="o">||</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">getPropertyValue</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="sr">/(\-([a-z]){1})/g</span><span class="p">;</span><span class="k">return</span><span class="s2">&quot;float&quot;</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;styleFloat&quot;</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">arguments</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="nx">toUpperCase</span><span class="p">()})),</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="k">this</span><span class="p">}),</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="o">||</span><span class="p">(</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">__proto__</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">a</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">!==</span><span class="k">this</span><span class="p">[</span><span class="nx">a</span><span class="p">])})}(</span><span class="nx">Holder</span><span class="p">,</span><span class="nb">window</span><span class="p">),</span><span class="cm">/*!</span></td>
      </tr>
      <tr>
        <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-code js-file-line"><span class="cm">* ZeroClipboard</span></td>
      </tr>
      <tr>
        <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-code js-file-line"><span class="cm">* The ZeroClipboard library provides an easy way to copy text to the clipboard using an invisible Adobe Flash movie and a JavaScript interface.</span></td>
      </tr>
      <tr>
        <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-code js-file-line"><span class="cm">* Copyright (c) 2014 Jon Rohan, James M. Greene</span></td>
      </tr>
      <tr>
        <td id="L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="LC14" class="blob-code js-file-line"><span class="cm">* Licensed MIT</span></td>
      </tr>
      <tr>
        <td id="L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="LC15" class="blob-code js-file-line"><span class="cm">* http://zeroclipboard.org/</span></td>
      </tr>
      <tr>
        <td id="L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="LC16" class="blob-code js-file-line"><span class="cm">* v1.3.5</span></td>
      </tr>
      <tr>
        <td id="L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="LC17" class="blob-code js-file-line"><span class="cm">*/</span></td>
      </tr>
      <tr>
        <td id="L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="LC18" class="blob-code js-file-line"><span class="o">!</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="s2">&quot;use strict&quot;</span><span class="p">;</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/,/g</span><span class="p">,</span><span class="s2">&quot;.&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[^0-9\.]/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nb">parseFloat</span><span class="p">(</span><span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="o">&gt;=</span><span class="mi">10</span><span class="p">}</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">{</span><span class="nx">bridge</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">version</span><span class="o">:</span><span class="s2">&quot;0.0.0&quot;</span><span class="p">,</span><span class="nx">disabled</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">outdated</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">ready</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">f</span><span class="o">=</span><span class="p">{},</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="p">{},</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="p">{},</span><span class="nx">k</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;ZeroClipboard.swf&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">currentScript</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">currentScript</span><span class="p">.</span><span class="nx">src</span><span class="p">));</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;script&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;readyState&quot;</span><span class="k">in</span> <span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">--&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;interactive&quot;</span><span class="o">!==</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">readyState</span><span class="o">||!</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">src</span><span class="p">)););</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;loading&quot;</span><span class="o">===</span><span class="nb">document</span><span class="p">.</span><span class="nx">readyState</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nx">src</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">--</span><span class="p">;){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">src</span><span class="p">,</span><span class="o">!</span><span class="nx">c</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;#&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;?&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="kc">null</span><span class="o">==</span><span class="nx">b</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">!==</span><span class="nx">c</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">break</span><span class="p">}}</span><span class="kc">null</span><span class="o">!==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">)}}</span><span class="k">return</span> <span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;#&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;?&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="nx">e</span><span class="p">),</span><span class="nx">e</span><span class="p">}(),</span><span class="nx">n</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="sr">/\-([a-z])/g</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()};</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}}(),</span><span class="nx">o</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="o">?</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kc">null</span><span class="p">).</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">currentStyle</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">e</span><span class="p">]),</span><span class="s2">&quot;cursor&quot;</span><span class="o">!==</span><span class="nx">c</span><span class="o">||</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="s2">&quot;auto&quot;</span><span class="o">!==</span><span class="nx">d</span><span class="o">||</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">tagName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(),</span><span class="s2">&quot;a&quot;</span><span class="o">!==</span><span class="nx">f</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="o">:</span><span class="s2">&quot;pointer&quot;</span><span class="p">},</span><span class="nx">p</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">event</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="o">!==</span><span class="nx">a</span><span class="o">?</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="o">?</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">srcElement</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">srcElement</span><span class="p">),</span><span class="nx">K</span><span class="p">.</span><span class="nx">activate</span><span class="p">(</span><span class="nx">c</span><span class="p">)},</span><span class="nx">q</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">attachEvent</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">))},</span><span class="nx">r</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">detachEvent</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">detachEvent</span><span class="p">(</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">))},</span><span class="nx">s</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">||</span><span class="mi">1</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">classList</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">classList</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">classList</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">(</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s+/</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">+=</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">]);</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^\s+|\s+$/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)}</span><span class="k">else</span> <span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">t</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">||</span><span class="mi">1</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">classList</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">classList</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">classList</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">||</span><span class="k">void</span> <span class="mi">0</span><span class="o">===</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">(</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s+/</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[\n\t]/g</span><span class="p">,</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">,</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^\s+|\s+$/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)}</span><span class="k">else</span> <span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">}</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">u</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">getBoundingClientRect</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">getBoundingClientRect</span><span class="p">(),</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">right</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">b</span><span class="o">/</span><span class="nx">c</span><span class="o">*</span><span class="mi">100</span><span class="p">)</span><span class="o">/</span><span class="mi">100</span><span class="p">),</span><span class="nx">d</span><span class="p">},</span><span class="nx">v</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">{</span><span class="nx">left</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">top</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">zIndex</span><span class="o">:</span><span class="nx">B</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">getBoundingClientRect</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">getBoundingClientRect</span><span class="p">();</span><span class="s2">&quot;pageXOffset&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;pageYOffset&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageXOffset</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageYOffset</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">u</span><span class="p">(),</span><span class="nx">e</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="o">/</span><span class="nx">g</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">scrollTop</span><span class="o">/</span><span class="nx">g</span><span class="p">));</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">clientLeft</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">clientTop</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">left</span><span class="o">+</span><span class="nx">e</span><span class="o">-</span><span class="nx">i</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="nx">f</span><span class="o">-</span><span class="nx">j</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="s2">&quot;width&quot;</span><span class="k">in</span> <span class="nx">h</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">width</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">right</span><span class="o">-</span><span class="nx">h</span><span class="p">.</span><span class="nx">left</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="s2">&quot;height&quot;</span><span class="k">in</span> <span class="nx">h</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">height</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">bottom</span><span class="o">-</span><span class="nx">h</span><span class="p">.</span><span class="nx">top</span><span class="p">}</span><span class="k">return</span> <span class="nx">d</span><span class="p">},</span><span class="nx">w</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kc">null</span><span class="o">==</span><span class="nx">b</span><span class="o">||</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">cacheBust</span><span class="o">===!</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">useNoCache</span><span class="o">===!</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="nx">c</span><span class="o">?</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;?&quot;</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;?&quot;</span><span class="o">:</span><span class="s2">&quot;&amp;&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;noCache=&quot;</span><span class="o">+</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">).</span><span class="nx">getTime</span><span class="p">()</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">},</span><span class="nx">x</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">g</span><span class="o">=</span><span class="p">[],</span><span class="nx">h</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">trustedOrigins</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">.</span><span class="nx">trustedOrigins</span><span class="o">?</span><span class="nx">g</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">trustedOrigins</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">.</span><span class="nx">trustedOrigins</span><span class="o">&amp;&amp;</span><span class="s2">&quot;length&quot;</span><span class="k">in</span> <span class="nx">b</span><span class="p">.</span><span class="nx">trustedOrigins</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">trustedOrigins</span><span class="p">))),</span><span class="nx">b</span><span class="p">.</span><span class="nx">trustedDomains</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">.</span><span class="nx">trustedDomains</span><span class="o">?</span><span class="nx">g</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">trustedDomains</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">.</span><span class="nx">trustedDomains</span><span class="o">&amp;&amp;</span><span class="s2">&quot;length&quot;</span><span class="k">in</span> <span class="nx">b</span><span class="p">.</span><span class="nx">trustedDomains</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">trustedDomains</span><span class="p">))),</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">g</span><span class="p">[</span><span class="nx">c</span><span class="p">]){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">E</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">c</span><span class="p">]),</span><span class="o">!</span><span class="nx">e</span><span class="p">)</span><span class="k">continue</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;*&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="k">break</span><span class="p">}</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">h</span><span class="p">,[</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;//&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">protocol</span><span class="o">+</span><span class="s2">&quot;//&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">])}</span><span class="k">return</span> <span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;trustedOrigins=&quot;</span><span class="o">+</span><span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">))),</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">.</span><span class="nx">jsModuleId</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">jsModuleId</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;jsModuleId=&quot;</span><span class="o">+</span><span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">jsModuleId</span><span class="p">)),</span><span class="nx">f</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&amp;&quot;</span><span class="p">)},</span><span class="nx">y</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="s2">&quot;undefined&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">c</span><span class="o">?</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="o">:</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="o">+</span><span class="nx">c</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">e</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">===</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="nx">d</span><span class="p">;</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">},</span><span class="nx">z</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;ZeroClipboard doesn&#39;t accept query strings.&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="p">[</span><span class="nx">a</span><span class="p">]},</span><span class="nx">A</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">e</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)},</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)},</span><span class="nx">B</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;number&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">?</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="o">:</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">10</span><span class="p">))</span><span class="o">&amp;&amp;!</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">)),</span><span class="nx">b</span><span class="o">||</span><span class="p">(</span><span class="s2">&quot;number&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">N</span><span class="p">.</span><span class="nx">zIndex</span><span class="o">&amp;&amp;</span><span class="nx">N</span><span class="p">.</span><span class="nx">zIndex</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">?</span><span class="nx">b</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">zIndex</span><span class="o">:</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">N</span><span class="p">.</span><span class="nx">zIndex</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">N</span><span class="p">.</span><span class="nx">zIndex</span><span class="p">,</span><span class="mi">10</span><span class="p">))</span><span class="o">&amp;&amp;!</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">)),</span><span class="nx">b</span><span class="o">||</span><span class="mi">0</span><span class="p">},</span><span class="nx">C</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">!==!</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">console</span><span class="o">&amp;&amp;</span><span class="nx">console</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">console</span><span class="p">.</span><span class="nx">warn</span><span class="o">||</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="s2">&quot;`&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;` is deprecated. See docs for more info:\n    https://github.com/zeroclipboard/zeroclipboard/blob/master/docs/instructions.md#deprecations&quot;</span><span class="p">;</span><span class="nx">console</span><span class="p">.</span><span class="nx">warn</span><span class="o">?</span><span class="nx">console</span><span class="p">.</span><span class="nx">warn</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">c</span><span class="p">)}},</span><span class="nx">D</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">a</span><span class="p">]))</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span> <span class="k">in</span> <span class="nx">c</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">d</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">g</span><span class="o">===</span><span class="nx">f</span><span class="p">)</span><span class="k">continue</span><span class="p">;</span><span class="k">void</span> <span class="mi">0</span><span class="o">!==</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">)}</span><span class="k">return</span> <span class="nx">g</span><span class="p">},</span><span class="nx">E</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^\s+|\s+$/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="s2">&quot;&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;//&quot;</span><span class="p">);</span><span class="nx">a</span><span class="o">=-</span><span class="mi">1</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="mi">2</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="o">=-</span><span class="mi">1</span><span class="o">===</span><span class="nx">c</span><span class="o">?</span><span class="nx">a</span><span class="o">:-</span><span class="mi">1</span><span class="o">===</span><span class="nx">b</span><span class="o">||</span><span class="mi">0</span><span class="o">===</span><span class="nx">c</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;.swf&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">4</span><span class="p">).</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="nx">a</span><span class="o">||</span><span class="kc">null</span><span class="p">},</span><span class="nx">F</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;*&quot;</span><span class="o">!==</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="p">[</span><span class="nx">a</span><span class="p">]),</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;length&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="p">))</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]))){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;*&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;*&quot;</span><span class="p">);</span><span class="k">break</span><span class="p">}</span><span class="o">-</span><span class="mi">1</span><span class="o">===</span><span class="nx">y</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">)}},</span><span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="nx">always</span><span class="o">:</span><span class="s2">&quot;always&quot;</span><span class="p">,</span><span class="nx">samedomain</span><span class="o">:</span><span class="s2">&quot;sameDomain&quot;</span><span class="p">,</span><span class="nx">never</span><span class="o">:</span><span class="s2">&quot;never&quot;</span><span class="p">};</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">allowScriptAccess</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">())</span><span class="o">&amp;&amp;</span><span class="sr">/^always|samedomain|never$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="k">return</span> <span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">E</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">moviePath</span><span class="p">);</span><span class="kc">null</span><span class="o">===</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">);</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="p">[];</span><span class="nx">a</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">trustedOrigins</span><span class="p">,</span><span class="nx">h</span><span class="p">),</span><span class="nx">a</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">trustedDomains</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">===</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="s2">&quot;*&quot;</span><span class="o">===</span><span class="nx">h</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="k">return</span><span class="s2">&quot;always&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="o">!==</span><span class="nx">y</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">))</span><span class="k">return</span> <span class="mi">1</span><span class="o">===</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">===</span><span class="nx">g</span><span class="o">?</span><span class="s2">&quot;sameDomain&quot;</span><span class="o">:</span><span class="s2">&quot;always&quot;</span><span class="p">}</span><span class="k">return</span><span class="s2">&quot;never&quot;</span><span class="p">}}(),</span><span class="nx">G</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">)</span><span class="k">return</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">H</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">delete</span> <span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">I</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="nb">document</span><span class="p">.</span><span class="nx">activeElement</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">a</span><span class="p">){}</span><span class="k">return</span> <span class="kc">null</span><span class="p">},</span><span class="nx">J</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;boolean&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">e</span><span class="p">.</span><span class="nx">disabled</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">disabled</span><span class="o">===!</span><span class="mi">1</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">ActiveXObject</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="k">new</span> <span class="nx">ActiveXObject</span><span class="p">(</span><span class="s2">&quot;ShockwaveFlash.ShockwaveFlash&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=!</span><span class="mi">0</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">b</span><span class="p">){}</span><span class="o">!</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">mimeTypes</span><span class="p">[</span><span class="s2">&quot;application/x-shockwave-flash&quot;</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=!</span><span class="mi">0</span><span class="p">)}</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">K</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span> <span class="k">instanceof</span> <span class="nx">K</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nx">g</span><span class="o">++</span><span class="p">,</span><span class="nx">h</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">instance</span><span class="o">:</span><span class="k">this</span><span class="p">,</span><span class="nx">elements</span><span class="o">:</span><span class="p">[],</span><span class="nx">handlers</span><span class="o">:</span><span class="p">{}},</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">clip</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">C</span><span class="p">(</span><span class="s2">&quot;new ZeroClipboard(elements, options)&quot;</span><span class="p">,</span><span class="nx">N</span><span class="p">.</span><span class="nx">debug</span><span class="p">),</span><span class="nx">K</span><span class="p">.</span><span class="nx">config</span><span class="p">(</span><span class="nx">b</span><span class="p">)),</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="o">=</span><span class="nx">K</span><span class="p">.</span><span class="nx">config</span><span class="p">(),</span><span class="s2">&quot;boolean&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">e</span><span class="p">.</span><span class="nx">disabled</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">disabled</span><span class="o">=!</span><span class="nx">J</span><span class="p">()),</span><span class="k">void</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">disabled</span><span class="o">===!</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">outdated</span><span class="o">!==!</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">bridge</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">outdated</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">ready</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">O</span><span class="p">())))</span><span class="o">:</span><span class="k">new</span> <span class="nx">K</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)};</span><span class="nx">K</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setText</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;&quot;</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="s2">&quot;text/plain&quot;</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">ready</span><span class="o">===!</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">bridge</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">e</span><span class="p">.</span><span class="nx">bridge</span><span class="p">.</span><span class="nx">setText</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">bridge</span><span class="p">.</span><span class="nx">setText</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">ready</span><span class="o">=!</span><span class="mi">1</span><span class="p">),</span><span class="k">this</span><span class="p">},</span><span class="nx">K</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setSize</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">ready</span><span class="o">===!</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">bridge</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">e</span><span class="p">.</span><span class="nx">bridge</span><span class="p">.</span><span class="nx">setSize</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">bridge</span><span class="p">.</span><span class="nx">setSize</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">ready</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">};</span><span class="kd">var</span> <span class="nx">L</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">ready</span><span class="o">===!</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">bridge</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">e</span><span class="p">.</span><span class="nx">bridge</span><span class="p">.</span><span class="nx">setHandCursor</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">bridge</span><span class="p">.</span><span class="nx">setHandCursor</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">ready</span><span class="o">=!</span><span class="mi">1</span><span class="p">};</span><span class="nx">K</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">destroy</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">unclip</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">off</span><span class="p">(),</span><span class="k">delete</span> <span class="nx">h</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">]};</span><span class="kd">var</span> <span class="nx">M</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="o">=</span><span class="nx">G</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">]].</span><span class="nx">instance</span><span class="p">,</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span> <span class="k">instanceof</span> <span class="nx">K</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="p">};</span><span class="nx">K</span><span class="p">.</span><span class="nx">version</span><span class="o">=</span><span class="s2">&quot;1.3.5&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">N</span><span class="o">=</span><span class="p">{</span><span class="nx">swfPath</span><span class="o">:</span><span class="nx">m</span><span class="p">,</span><span class="nx">trustedDomains</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">host</span><span class="o">?</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">host</span><span class="p">]</span><span class="o">:</span><span class="p">[],</span><span class="nx">cacheBust</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">forceHandCursor</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">zIndex</span><span class="o">:</span><span class="mi">999999999</span><span class="p">,</span><span class="nx">debug</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">title</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">autoActivate</span><span class="o">:!</span><span class="mi">0</span><span class="p">};</span><span class="nx">K</span><span class="p">.</span><span class="nx">config</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">D</span><span class="p">(</span><span class="nx">N</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="s2">&quot;string&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">||!</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span> <span class="k">in</span> <span class="nx">N</span><span class="p">)</span><span class="nx">N</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">N</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!==</span><span class="nx">N</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">?</span><span class="s2">&quot;length&quot;</span><span class="k">in</span> <span class="nx">N</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">?</span><span class="nx">N</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nx">D</span><span class="p">({},</span><span class="nx">N</span><span class="p">[</span><span class="nx">c</span><span class="p">])</span><span class="o">:</span><span class="nx">N</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="k">return</span> <span class="nx">N</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">N</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">},</span><span class="nx">K</span><span class="p">.</span><span class="nx">destroy</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">K</span><span class="p">.</span><span class="nx">deactivate</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span> <span class="k">in</span> <span class="nx">h</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">[</span><span class="nx">a</span><span class="p">]){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">instance</span><span class="p">;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">.</span><span class="nx">destroy</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">destroy</span><span class="p">()}</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">P</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">bridge</span><span class="p">);</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">ready</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">bridge</span><span class="o">=</span><span class="kc">null</span><span class="p">)},</span><span class="nx">K</span><span class="p">.</span><span class="nx">activate</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">N</span><span class="p">.</span><span class="nx">hoverClass</span><span class="p">),</span><span class="nx">t</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">N</span><span class="p">.</span><span class="nx">activeClass</span><span class="p">)),</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">s</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">N</span><span class="p">.</span><span class="nx">hoverClass</span><span class="p">),</span><span class="nx">Q</span><span class="p">();</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">title</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;title&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">P</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">bridge</span><span class="p">);</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;title&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">forceHandCursor</span><span class="o">===!</span><span class="mi">0</span><span class="o">||</span><span class="s2">&quot;pointer&quot;</span><span class="o">===</span><span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;cursor&quot;</span><span class="p">);</span><span class="nx">L</span><span class="p">(</span><span class="nx">f</span><span class="p">)},</span><span class="nx">K</span><span class="p">.</span><span class="nx">deactivate</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">P</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">bridge</span><span class="p">);</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="s2">&quot;0px&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="s2">&quot;-9999px&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeAttribute</span><span class="p">(</span><span class="s2">&quot;title&quot;</span><span class="p">)),</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">N</span><span class="p">.</span><span class="nx">hoverClass</span><span class="p">),</span><span class="nx">t</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">N</span><span class="p">.</span><span class="nx">activeClass</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">)};</span><span class="kd">var</span> <span class="nx">O</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;global-zeroclipboard-html-bridge&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">K</span><span class="p">.</span><span class="nx">config</span><span class="p">();</span><span class="nx">f</span><span class="p">.</span><span class="nx">jsModuleId</span><span class="o">=</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">k</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="o">||</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="o">||</span><span class="kc">null</span><span class="p">;</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">host</span><span class="p">,</span><span class="nx">N</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">moviePath</span><span class="o">+</span><span class="nx">w</span><span class="p">(</span><span class="nx">N</span><span class="p">.</span><span class="nx">moviePath</span><span class="p">,</span><span class="nx">N</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="s1">&#39;      &lt;object classid=&quot;clsid:d27cdb6e-ae6d-11cf-96b8-444553540000&quot; id=&quot;global-zeroclipboard-flash-bridge&quot; width=&quot;100%&quot; height=&quot;100%&quot;&gt;         &lt;param name=&quot;movie&quot; value=&quot;&#39;</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="s1">&#39;&quot;/&gt;         &lt;param name=&quot;allowScriptAccess&quot; value=&quot;&#39;</span><span class="o">+</span><span class="nx">g</span><span class="o">+</span><span class="s1">&#39;&quot;/&gt;         &lt;param name=&quot;scale&quot; value=&quot;exactfit&quot;/&gt;         &lt;param name=&quot;loop&quot; value=&quot;false&quot;/&gt;         &lt;param name=&quot;menu&quot; value=&quot;false&quot;/&gt;         &lt;param name=&quot;quality&quot; value=&quot;best&quot; /&gt;         &lt;param name=&quot;bgcolor&quot; value=&quot;#ffffff&quot;/&gt;         &lt;param name=&quot;wmode&quot; value=&quot;transparent&quot;/&gt;         &lt;param name=&quot;flashvars&quot; value=&quot;&#39;</span><span class="o">+</span><span class="nx">h</span><span class="o">+</span><span class="s1">&#39;&quot;/&gt;         &lt;embed src=&quot;&#39;</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="s1">&#39;&quot;           loop=&quot;false&quot; menu=&quot;false&quot;           quality=&quot;best&quot; bgcolor=&quot;#ffffff&quot;           width=&quot;100%&quot; height=&quot;100%&quot;           name=&quot;global-zeroclipboard-flash-bridge&quot;           allowScriptAccess=&quot;&#39;</span><span class="o">+</span><span class="nx">g</span><span class="o">+</span><span class="s1">&#39;&quot;           allowFullScreen=&quot;false&quot;           type=&quot;application/x-shockwave-flash&quot;           wmode=&quot;transparent&quot;           pluginspage=&quot;http://www.macromedia.com/go/getflashplayer&quot;           flashvars=&quot;&#39;</span><span class="o">+</span><span class="nx">h</span><span class="o">+</span><span class="s1">&#39;&quot;           scale=&quot;exactfit&quot;&gt;         &lt;/embed&gt;       &lt;/object&gt;&#39;</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="s2">&quot;global-zeroclipboard-html-bridge&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;class&quot;</span><span class="p">,</span><span class="s2">&quot;global-zeroclipboard-container&quot;</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="s2">&quot;absolute&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="s2">&quot;0px&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="s2">&quot;-9999px&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="s2">&quot;15px&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="s2">&quot;15px&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">zIndex</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nx">B</span><span class="p">(</span><span class="nx">N</span><span class="p">.</span><span class="nx">zIndex</span><span class="p">),</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">j</span><span class="p">}</span><span class="nx">b</span><span class="o">=</span><span class="nb">document</span><span class="p">[</span><span class="s2">&quot;global-zeroclipboard-flash-bridge&quot;</span><span class="p">],</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="o">-</span><span class="mi">1</span><span class="p">]),</span><span class="nx">e</span><span class="p">.</span><span class="nx">bridge</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">children</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">lastElementChild</span><span class="p">},</span><span class="nx">P</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="sr">/^OBJECT|EMBED$/</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;)</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="k">return</span> <span class="nx">c</span><span class="o">||</span><span class="kc">null</span><span class="p">},</span><span class="nx">Q</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">v</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">N</span><span class="p">.</span><span class="nx">zIndex</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">P</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">bridge</span><span class="p">);</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">zIndex</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">zIndex</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">ready</span><span class="o">===!</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">bridge</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">e</span><span class="p">.</span><span class="nx">bridge</span><span class="p">.</span><span class="nx">setSize</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">bridge</span><span class="p">.</span><span class="nx">setSize</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">ready</span><span class="o">=!</span><span class="mi">1</span><span class="p">}</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">K</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">on</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="p">{},</span><span class="nx">i</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">].</span><span class="nx">handlers</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">().</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s+/</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^on/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">g</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">[]),</span><span class="nx">i</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">noflash</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">disabled</span><span class="o">&amp;&amp;</span><span class="nx">T</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;noflash&quot;</span><span class="p">,{}),</span><span class="nx">g</span><span class="p">.</span><span class="nx">wrongflash</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">outdated</span><span class="o">&amp;&amp;</span><span class="nx">T</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;wrongflash&quot;</span><span class="p">,{</span><span class="nx">flashVersion</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">version</span><span class="p">}),</span><span class="nx">g</span><span class="p">.</span><span class="nx">load</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">ready</span><span class="o">&amp;&amp;</span><span class="nx">T</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;load&quot;</span><span class="p">,{</span><span class="nx">flashVersion</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">version</span><span class="p">})}</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">K</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">off</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">].</span><span class="nx">handlers</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">G</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s+/</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">off</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">toLowerCase</span><span class="p">().</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^on/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">y</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="o">-</span><span class="mi">1</span><span class="o">!==</span><span class="nx">e</span><span class="p">;)</span><span class="nx">g</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">y</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">else</span> <span class="nx">i</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">K</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">handlers</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">].</span><span class="nx">handlers</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">?</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">d</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">))}</span><span class="k">return</span> <span class="nx">c</span><span class="p">};</span><span class="kd">var</span> <span class="nx">R</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">].</span><span class="nx">handlers</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="k">this</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">&gt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">j</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">c</span><span class="o">=</span><span class="nx">k</span><span class="p">,</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">j</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">j</span><span class="p">]),</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">j</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">j</span><span class="p">.</span><span class="nx">handleEvent</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">j</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">handleEvent</span><span class="p">),</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">j</span><span class="o">&amp;&amp;</span><span class="nx">A</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">)}</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">K</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clip</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">===</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">nodeType</span><span class="p">){</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">zcClippingId</span><span class="o">?-</span><span class="mi">1</span><span class="o">===</span><span class="nx">y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span><span class="nx">j</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">zcClippingId</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">zcClippingId</span><span class="p">].</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">zcClippingId</span><span class="o">=</span><span class="s2">&quot;zcClippingId_&quot;</span><span class="o">+</span><span class="nx">i</span><span class="o">++</span><span class="p">,</span><span class="nx">j</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">zcClippingId</span><span class="p">]</span><span class="o">=</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">],</span><span class="nx">N</span><span class="p">.</span><span class="nx">autoActivate</span><span class="o">===!</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="s2">&quot;mouseover&quot;</span><span class="p">,</span><span class="nx">p</span><span class="p">));</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">].</span><span class="nx">elements</span><span class="p">;</span><span class="o">-</span><span class="mi">1</span><span class="o">===</span><span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">])}</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">K</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">unclip</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">elements</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;undefined&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">--</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">===</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">nodeType</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="o">-</span><span class="mi">1</span><span class="o">!==</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">));)</span><span class="nx">d</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">zcClippingId</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="o">-</span><span class="mi">1</span><span class="o">!==</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">y</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">c</span><span class="p">));)</span><span class="nx">f</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="mi">0</span><span class="o">===</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">N</span><span class="p">.</span><span class="nx">autoActivate</span><span class="o">===!</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="s2">&quot;mouseover&quot;</span><span class="p">,</span><span class="nx">p</span><span class="p">),</span><span class="k">delete</span> <span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">zcClippingId</span><span class="p">)}}}</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">K</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">elements</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">];</span><span class="k">return</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">elements</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">elements</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="p">[]};</span><span class="kd">var</span> <span class="nx">S</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">zcClippingId</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">))</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]].</span><span class="nx">instance</span><span class="p">,</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">f</span> <span class="k">instanceof</span> <span class="nx">K</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="k">return</span> <span class="nx">g</span><span class="p">};</span><span class="nx">N</span><span class="p">.</span><span class="nx">hoverClass</span><span class="o">=</span><span class="s2">&quot;zeroclipboard-is-hover&quot;</span><span class="p">,</span><span class="nx">N</span><span class="p">.</span><span class="nx">activeClass</span><span class="o">=</span><span class="s2">&quot;zeroclipboard-is-active&quot;</span><span class="p">,</span><span class="nx">N</span><span class="p">.</span><span class="nx">trustedOrigins</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">N</span><span class="p">.</span><span class="nx">allowScriptAccess</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">N</span><span class="p">.</span><span class="nx">useNoCache</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">N</span><span class="p">.</span><span class="nx">moviePath</span><span class="o">=</span><span class="s2">&quot;ZeroClipboard.swf&quot;</span><span class="p">,</span><span class="nx">K</span><span class="p">.</span><span class="nx">detectFlashSupport</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">C</span><span class="p">(</span><span class="s2">&quot;ZeroClipboard.detectFlashSupport&quot;</span><span class="p">,</span><span class="nx">N</span><span class="p">.</span><span class="nx">debug</span><span class="p">),</span><span class="nx">J</span><span class="p">()},</span><span class="nx">K</span><span class="p">.</span><span class="nx">dispatch</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">().</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^on/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">N</span><span class="p">.</span><span class="nx">autoActivate</span><span class="o">===!</span><span class="mi">0</span><span class="o">?</span><span class="nx">S</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nx">M</span><span class="p">(),</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">T</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">)}},</span><span class="nx">K</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setHandCursor</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">C</span><span class="p">(</span><span class="s2">&quot;ZeroClipboard.prototype.setHandCursor&quot;</span><span class="p">,</span><span class="nx">N</span><span class="p">.</span><span class="nx">debug</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;boolean&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="o">:!!</span><span class="nx">a</span><span class="p">,</span><span class="nx">L</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">N</span><span class="p">.</span><span class="nx">forceHandCursor</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">},</span><span class="nx">K</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">reposition</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">C</span><span class="p">(</span><span class="s2">&quot;ZeroClipboard.prototype.reposition&quot;</span><span class="p">,</span><span class="nx">N</span><span class="p">.</span><span class="nx">debug</span><span class="p">),</span><span class="nx">Q</span><span class="p">()},</span><span class="nx">K</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">receiveEvent</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="p">(</span><span class="s2">&quot;ZeroClipboard.prototype.receiveEvent&quot;</span><span class="p">,</span><span class="nx">N</span><span class="p">.</span><span class="nx">debug</span><span class="p">),</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">().</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^on/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">T</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">)}},</span><span class="nx">K</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setCurrent</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">C</span><span class="p">(</span><span class="s2">&quot;ZeroClipboard.prototype.setCurrent&quot;</span><span class="p">,</span><span class="nx">N</span><span class="p">.</span><span class="nx">debug</span><span class="p">),</span><span class="nx">K</span><span class="p">.</span><span class="nx">activate</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">},</span><span class="nx">K</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">resetBridge</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">C</span><span class="p">(</span><span class="s2">&quot;ZeroClipboard.prototype.resetBridge&quot;</span><span class="p">,</span><span class="nx">N</span><span class="p">.</span><span class="nx">debug</span><span class="p">),</span><span class="nx">K</span><span class="p">.</span><span class="nx">deactivate</span><span class="p">(),</span><span class="k">this</span><span class="p">},</span><span class="nx">K</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setTitle</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="p">(</span><span class="s2">&quot;ZeroClipboard.prototype.setTitle&quot;</span><span class="p">,</span><span class="nx">N</span><span class="p">.</span><span class="nx">debug</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="nx">N</span><span class="p">.</span><span class="nx">title</span><span class="o">||</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;title&quot;</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">P</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">bridge</span><span class="p">);</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;title&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)}</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">K</span><span class="p">.</span><span class="nx">setDefaults</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">C</span><span class="p">(</span><span class="s2">&quot;ZeroClipboard.setDefaults&quot;</span><span class="p">,</span><span class="nx">N</span><span class="p">.</span><span class="nx">debug</span><span class="p">),</span><span class="nx">K</span><span class="p">.</span><span class="nx">config</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">K</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">C</span><span class="p">(</span><span class="s2">&quot;ZeroClipboard.prototype.addEventListener&quot;</span><span class="p">,</span><span class="nx">N</span><span class="p">.</span><span class="nx">debug</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)},</span><span class="nx">K</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">C</span><span class="p">(</span><span class="s2">&quot;ZeroClipboard.prototype.removeEventListener&quot;</span><span class="p">,</span><span class="nx">N</span><span class="p">.</span><span class="nx">debug</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">off</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)},</span><span class="nx">K</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ready</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">C</span><span class="p">(</span><span class="s2">&quot;ZeroClipboard.prototype.ready&quot;</span><span class="p">,</span><span class="nx">N</span><span class="p">.</span><span class="nx">debug</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">ready</span><span class="o">===!</span><span class="mi">0</span><span class="p">};</span><span class="kd">var</span> <span class="nx">T</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">().</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^on/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">flashVersion</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">flashVersion</span><span class="p">)</span><span class="o">||</span><span class="kc">null</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">j</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;load&quot;</span><span class="o">:</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">(</span><span class="nx">h</span><span class="p">))</span><span class="k">return</span> <span class="k">void</span> <span class="nx">T</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;onWrongFlash&quot;</span><span class="p">,{</span><span class="nx">flashVersion</span><span class="o">:</span><span class="nx">h</span><span class="p">});</span><span class="nx">e</span><span class="p">.</span><span class="nx">outdated</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">ready</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">version</span><span class="o">=</span><span class="nx">h</span><span class="p">}</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;wrongflash&quot;</span><span class="o">:</span><span class="nx">h</span><span class="o">&amp;&amp;!</span><span class="nx">c</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">outdated</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">ready</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">version</span><span class="o">=</span><span class="nx">h</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;mouseover&quot;</span><span class="o">:</span><span class="nx">s</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">N</span><span class="p">.</span><span class="nx">hoverClass</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;mouseout&quot;</span><span class="o">:</span><span class="nx">N</span><span class="p">.</span><span class="nx">autoActivate</span><span class="o">===!</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">K</span><span class="p">.</span><span class="nx">deactivate</span><span class="p">();</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;mousedown&quot;</span><span class="o">:</span><span class="nx">s</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">N</span><span class="p">.</span><span class="nx">activeClass</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;mouseup&quot;</span><span class="o">:</span><span class="nx">t</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">N</span><span class="p">.</span><span class="nx">activeClass</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;datarequested&quot;</span><span class="o">:</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;data-clipboard-target&quot;</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="nx">k</span><span class="o">?</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">value</span><span class="o">||</span><span class="nx">l</span><span class="p">.</span><span class="nx">textContent</span><span class="o">||</span><span class="nx">l</span><span class="p">.</span><span class="nx">innerText</span><span class="p">;</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">setText</span><span class="p">(</span><span class="nx">m</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;data-clipboard-text&quot;</span><span class="p">);</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">setText</span><span class="p">(</span><span class="nx">n</span><span class="p">)}}</span><span class="nx">j</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;complete&quot;</span><span class="o">:</span><span class="nx">H</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="o">!==</span><span class="nx">I</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">focus</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">focus</span><span class="p">()}</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nx">i</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="p">[</span><span class="k">this</span><span class="p">,</span><span class="nx">g</span><span class="p">];</span><span class="k">return</span> <span class="nx">R</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">j</span><span class="p">)};</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">define</span><span class="o">&amp;&amp;</span><span class="nx">define</span><span class="p">.</span><span class="nx">amd</span><span class="o">?</span><span class="nx">define</span><span class="p">([</span><span class="s2">&quot;require&quot;</span><span class="p">,</span><span class="s2">&quot;exports&quot;</span><span class="p">,</span><span class="s2">&quot;module&quot;</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">k</span><span class="o">=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">id</span><span class="o">||</span><span class="kc">null</span><span class="p">,</span><span class="nx">K</span><span class="p">})</span><span class="o">:</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">module</span><span class="o">&amp;&amp;</span><span class="nx">module</span><span class="o">&amp;&amp;</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="o">&amp;&amp;</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">require</span><span class="o">?</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="nx">module</span><span class="p">.</span><span class="nx">id</span><span class="o">||</span><span class="kc">null</span><span class="p">,</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="o">=</span><span class="nx">K</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">ZeroClipboard</span><span class="o">=</span><span class="nx">K</span><span class="p">}(</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">}()),</span><span class="cm">/*!</span></td>
      </tr>
      <tr>
        <td id="L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="LC19" class="blob-code js-file-line"><span class="cm"> * JavaScript for Bootstrap&#39;s docs (http://getbootstrap.com)</span></td>
      </tr>
      <tr>
        <td id="L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="LC20" class="blob-code js-file-line"><span class="cm"> * Copyright 2011-2014 Twitter, Inc.</span></td>
      </tr>
      <tr>
        <td id="L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="LC21" class="blob-code js-file-line"><span class="cm"> * Licensed under the Creative Commons Attribution 3.0 Unported License. For</span></td>
      </tr>
      <tr>
        <td id="L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="LC22" class="blob-code js-file-line"><span class="cm"> * details, see http://creativecommons.org/licenses/by/3.0/.</span></td>
      </tr>
      <tr>
        <td id="L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="LC23" class="blob-code js-file-line"><span class="cm"> */</span></td>
      </tr>
      <tr>
        <td id="L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="LC24" class="blob-code js-file-line"><span class="o">!</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="s2">&quot;use strict&quot;</span><span class="p">;</span><span class="nx">a</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nb">window</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">scrollspy</span><span class="p">({</span><span class="nx">target</span><span class="o">:</span><span class="s2">&quot;.bs-docs-sidebar&quot;</span><span class="p">}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;load&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">scrollspy</span><span class="p">(</span><span class="s2">&quot;refresh&quot;</span><span class="p">)}),</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;.bs-docs-container [href=#]&quot;</span><span class="p">).</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">()}),</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;.bs-docs-sidebar&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">affix</span><span class="p">({</span><span class="nx">offset</span><span class="o">:</span><span class="p">{</span><span class="nx">top</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">offset</span><span class="p">().</span><span class="nx">top</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;margin-top&quot;</span><span class="p">),</span><span class="mi">10</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;.bs-docs-nav&quot;</span><span class="p">).</span><span class="nx">height</span><span class="p">();</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="nx">c</span><span class="o">-</span><span class="nx">e</span><span class="o">-</span><span class="nx">d</span><span class="p">},</span><span class="nx">bottom</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">bottom</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;.bs-docs-footer&quot;</span><span class="p">).</span><span class="nx">outerHeight</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">)}}})},</span><span class="mi">100</span><span class="p">),</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;.bs-top&quot;</span><span class="p">).</span><span class="nx">affix</span><span class="p">()},</span><span class="mi">100</span><span class="p">),</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;#bs-theme-stylesheet&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;.bs-docs-theme-toggle&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;href&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;data-href&quot;</span><span class="p">)),</span><span class="nx">c</span><span class="p">.</span><span class="nx">text</span><span class="p">(</span><span class="s2">&quot;Disable theme preview&quot;</span><span class="p">),</span><span class="nx">localStorage</span><span class="p">.</span><span class="nx">setItem</span><span class="p">(</span><span class="s2">&quot;previewTheme&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)};</span><span class="nx">localStorage</span><span class="p">.</span><span class="nx">getItem</span><span class="p">(</span><span class="s2">&quot;previewTheme&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">(),</span><span class="nx">c</span><span class="p">.</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;href&quot;</span><span class="p">);</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;data&quot;</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;href&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">text</span><span class="p">(</span><span class="s2">&quot;Preview theme&quot;</span><span class="p">),</span><span class="nx">localStorage</span><span class="p">.</span><span class="nx">removeItem</span><span class="p">(</span><span class="s2">&quot;previewTheme&quot;</span><span class="p">))</span><span class="o">:</span><span class="nx">d</span><span class="p">()})}(),</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;.tooltip-demo&quot;</span><span class="p">).</span><span class="nx">tooltip</span><span class="p">({</span><span class="nx">selector</span><span class="o">:</span><span class="s1">&#39;[data-toggle=&quot;tooltip&quot;]&#39;</span><span class="p">,</span><span class="nx">container</span><span class="o">:</span><span class="s2">&quot;body&quot;</span><span class="p">}),</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;.popover-demo&quot;</span><span class="p">).</span><span class="nx">popover</span><span class="p">({</span><span class="nx">selector</span><span class="o">:</span><span class="s1">&#39;[data-toggle=&quot;popover&quot;]&#39;</span><span class="p">,</span><span class="nx">container</span><span class="o">:</span><span class="s2">&quot;body&quot;</span><span class="p">}),</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;.tooltip-test&quot;</span><span class="p">).</span><span class="nx">tooltip</span><span class="p">(),</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;.popover-test&quot;</span><span class="p">).</span><span class="nx">popover</span><span class="p">(),</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;.bs-docs-popover&quot;</span><span class="p">).</span><span class="nx">popover</span><span class="p">(),</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;#loading-example-btn&quot;</span><span class="p">).</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">button</span><span class="p">(</span><span class="s2">&quot;loading&quot;</span><span class="p">),</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">button</span><span class="p">(</span><span class="s2">&quot;reset&quot;</span><span class="p">)},</span><span class="mi">3</span><span class="nx">e3</span><span class="p">)}),</span><span class="nx">ZeroClipboard</span><span class="p">.</span><span class="nx">config</span><span class="p">({</span><span class="nx">moviePath</span><span class="o">:</span><span class="s2">&quot;/assets/flash/ZeroClipboard.swf&quot;</span><span class="p">,</span><span class="nx">hoverClass</span><span class="o">:</span><span class="s2">&quot;btn-clipboard-hover&quot;</span><span class="p">}),</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;.highlight&quot;</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">prev</span><span class="p">(),</span><span class="nx">d</span><span class="o">=</span><span class="s1">&#39;&lt;div class=&quot;zero-clipboard&quot;&gt;&lt;span class=&quot;btn-clipboard&quot;&gt;Copy&lt;/span&gt;&lt;/div&gt;&#39;</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="s2">&quot;bs-example&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">before</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/btn-clipboard/</span><span class="p">,</span><span class="s2">&quot;btn-clipboard with-example&quot;</span><span class="p">))</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">before</span><span class="p">(</span><span class="nx">d</span><span class="p">)});</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">new</span> <span class="nx">ZeroClipboard</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;.btn-clipboard&quot;</span><span class="p">)),</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;#global-zeroclipboard-html-bridge&quot;</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;load&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;placement&quot;</span><span class="p">,</span><span class="s2">&quot;top&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;title&quot;</span><span class="p">,</span><span class="s2">&quot;Copy to clipboard&quot;</span><span class="p">).</span><span class="nx">tooltip</span><span class="p">()}),</span><span class="nx">d</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;dataRequested&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">parent</span><span class="p">().</span><span class="nx">nextAll</span><span class="p">(</span><span class="s2">&quot;.highlight&quot;</span><span class="p">).</span><span class="nx">first</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">setText</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">text</span><span class="p">())}),</span><span class="nx">d</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;complete&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;title&quot;</span><span class="p">,</span><span class="s2">&quot;Copied!&quot;</span><span class="p">).</span><span class="nx">tooltip</span><span class="p">(</span><span class="s2">&quot;fixTitle&quot;</span><span class="p">).</span><span class="nx">tooltip</span><span class="p">(</span><span class="s2">&quot;show&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;title&quot;</span><span class="p">,</span><span class="s2">&quot;Copy to clipboard&quot;</span><span class="p">).</span><span class="nx">tooltip</span><span class="p">(</span><span class="s2">&quot;fixTitle&quot;</span><span class="p">)}),</span><span class="nx">d</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;noflash wrongflash&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;title&quot;</span><span class="p">,</span><span class="s2">&quot;Flash required&quot;</span><span class="p">).</span><span class="nx">tooltip</span><span class="p">(</span><span class="s2">&quot;fixTitle&quot;</span><span class="p">).</span><span class="nx">tooltip</span><span class="p">(</span><span class="s2">&quot;show&quot;</span><span class="p">)})})}(</span><span class="nx">jQuery</span><span class="p">);</span></td>
      </tr>
</table>

  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer" role="contentinfo">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/" aria-label="Homepage">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2014 <span title="0.06466s from github-fe125-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-suggester-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="fullscreen-contents js-fullscreen-contents js-suggester-field" placeholder=""></textarea>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-x flash-close js-ajax-error-dismiss" aria-label="Dismiss error"></a>
      Something went wrong with that request. Please try again.
    </div>


      <script crossorigin="anonymous" src="https://assets-cdn.github.com/assets/frameworks-7697aacc55f84bd4542cfa34f8052d9a7e3d1378.js" type="text/javascript"></script>
      <script async="async" crossorigin="anonymous" src="https://assets-cdn.github.com/assets/github-86730ac1df5543b876a014a6824213397ee7e926.js" type="text/javascript"></script>
      
      
        <script async src="https://www.google-analytics.com/analytics.js"></script>
  </body>
</html>

